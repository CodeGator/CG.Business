### YamlMime:XRefMap
sorted: true
references:
- uid: CG.Business.Models
  name: CG.Business.Models
  href: api/CG.Business.Models.html
  commentId: N:CG.Business.Models
  fullName: CG.Business.Models
  nameWithType: CG.Business.Models
- uid: CG.Business.Models.ModelBase
  name: ModelBase
  href: api/CG.Business.Models.ModelBase.html
  commentId: T:CG.Business.Models.ModelBase
  fullName: CG.Business.Models.ModelBase
  nameWithType: ModelBase
- uid: CG.Business.Models.ModelBase`1
  name: ModelBase<T>
  href: api/CG.Business.Models.ModelBase-1.html
  commentId: T:CG.Business.Models.ModelBase`1
  name.vb: ModelBase(Of T)
  fullName: CG.Business.Models.ModelBase<T>
  fullName.vb: CG.Business.Models.ModelBase(Of T)
  nameWithType: ModelBase<T>
  nameWithType.vb: ModelBase(Of T)
- uid: CG.Business.Models.ModelBase`1.Equals(System.Object)
  name: Equals(Object)
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_Equals_System_Object_
  commentId: M:CG.Business.Models.ModelBase`1.Equals(System.Object)
  fullName: CG.Business.Models.ModelBase<T>.Equals(System.Object)
  fullName.vb: CG.Business.Models.ModelBase(Of T).Equals(System.Object)
  nameWithType: ModelBase<T>.Equals(Object)
  nameWithType.vb: ModelBase(Of T).Equals(Object)
- uid: CG.Business.Models.ModelBase`1.Equals*
  name: Equals
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_Equals_
  commentId: Overload:CG.Business.Models.ModelBase`1.Equals
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<T>.Equals
  fullName.vb: CG.Business.Models.ModelBase(Of T).Equals
  nameWithType: ModelBase<T>.Equals
  nameWithType.vb: ModelBase(Of T).Equals
- uid: CG.Business.Models.ModelBase`1.GetHashCode
  name: GetHashCode()
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_GetHashCode
  commentId: M:CG.Business.Models.ModelBase`1.GetHashCode
  fullName: CG.Business.Models.ModelBase<T>.GetHashCode()
  fullName.vb: CG.Business.Models.ModelBase(Of T).GetHashCode()
  nameWithType: ModelBase<T>.GetHashCode()
  nameWithType.vb: ModelBase(Of T).GetHashCode()
- uid: CG.Business.Models.ModelBase`1.GetHashCode*
  name: GetHashCode
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_GetHashCode_
  commentId: Overload:CG.Business.Models.ModelBase`1.GetHashCode
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<T>.GetHashCode
  fullName.vb: CG.Business.Models.ModelBase(Of T).GetHashCode
  nameWithType: ModelBase<T>.GetHashCode
  nameWithType.vb: ModelBase(Of T).GetHashCode
- uid: CG.Business.Models.ModelBase`1.Id
  name: Id
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_Id
  commentId: P:CG.Business.Models.ModelBase`1.Id
  fullName: CG.Business.Models.ModelBase<T>.Id
  fullName.vb: CG.Business.Models.ModelBase(Of T).Id
  nameWithType: ModelBase<T>.Id
  nameWithType.vb: ModelBase(Of T).Id
- uid: CG.Business.Models.ModelBase`1.Id*
  name: Id
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_Id_
  commentId: Overload:CG.Business.Models.ModelBase`1.Id
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<T>.Id
  fullName.vb: CG.Business.Models.ModelBase(Of T).Id
  nameWithType: ModelBase<T>.Id
  nameWithType.vb: ModelBase(Of T).Id
- uid: CG.Business.Models.ModelBase`1.ToString
  name: ToString()
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_ToString
  commentId: M:CG.Business.Models.ModelBase`1.ToString
  fullName: CG.Business.Models.ModelBase<T>.ToString()
  fullName.vb: CG.Business.Models.ModelBase(Of T).ToString()
  nameWithType: ModelBase<T>.ToString()
  nameWithType.vb: ModelBase(Of T).ToString()
- uid: CG.Business.Models.ModelBase`1.ToString*
  name: ToString
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_ToString_
  commentId: Overload:CG.Business.Models.ModelBase`1.ToString
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<T>.ToString
  fullName.vb: CG.Business.Models.ModelBase(Of T).ToString
  nameWithType: ModelBase<T>.ToString
  nameWithType.vb: ModelBase(Of T).ToString
- uid: CG.Business.Repositories
  name: CG.Business.Repositories
  href: api/CG.Business.Repositories.html
  commentId: N:CG.Business.Repositories
  fullName: CG.Business.Repositories
  nameWithType: CG.Business.Repositories
- uid: CG.Business.Repositories.IRepository
  name: IRepository
  href: api/CG.Business.Repositories.IRepository.html
  commentId: T:CG.Business.Repositories.IRepository
  fullName: CG.Business.Repositories.IRepository
  nameWithType: IRepository
- uid: CG.Business.Repositories.Options
  name: CG.Business.Repositories.Options
  href: api/CG.Business.Repositories.Options.html
  commentId: N:CG.Business.Repositories.Options
  fullName: CG.Business.Repositories.Options
  nameWithType: CG.Business.Repositories.Options
- uid: CG.Business.Repositories.Options.RepositoryOptions
  name: RepositoryOptions
  href: api/CG.Business.Repositories.Options.RepositoryOptions.html
  commentId: T:CG.Business.Repositories.Options.RepositoryOptions
  fullName: CG.Business.Repositories.Options.RepositoryOptions
  nameWithType: RepositoryOptions
- uid: CG.Business.Repositories.RepositoryBase
  name: RepositoryBase
  href: api/CG.Business.Repositories.RepositoryBase.html
  commentId: T:CG.Business.Repositories.RepositoryBase
  fullName: CG.Business.Repositories.RepositoryBase
  nameWithType: RepositoryBase
- uid: CG.Business.Repositories.RepositoryBase`1
  name: RepositoryBase<TOptions>
  href: api/CG.Business.Repositories.RepositoryBase-1.html
  commentId: T:CG.Business.Repositories.RepositoryBase`1
  name.vb: RepositoryBase(Of TOptions)
  fullName: CG.Business.Repositories.RepositoryBase<TOptions>
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions)
  nameWithType: RepositoryBase<TOptions>
  nameWithType.vb: RepositoryBase(Of TOptions)
- uid: CG.Business.Repositories.RepositoryBase`1.#ctor(`0)
  name: RepositoryBase(TOptions)
  href: api/CG.Business.Repositories.RepositoryBase-1.html#CG_Business_Repositories_RepositoryBase_1__ctor__0_
  commentId: M:CG.Business.Repositories.RepositoryBase`1.#ctor(`0)
  fullName: CG.Business.Repositories.RepositoryBase<TOptions>.RepositoryBase(TOptions)
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions).RepositoryBase(TOptions)
  nameWithType: RepositoryBase<TOptions>.RepositoryBase(TOptions)
  nameWithType.vb: RepositoryBase(Of TOptions).RepositoryBase(TOptions)
- uid: CG.Business.Repositories.RepositoryBase`1.#ctor*
  name: RepositoryBase
  href: api/CG.Business.Repositories.RepositoryBase-1.html#CG_Business_Repositories_RepositoryBase_1__ctor_
  commentId: Overload:CG.Business.Repositories.RepositoryBase`1.#ctor
  isSpec: "True"
  fullName: CG.Business.Repositories.RepositoryBase<TOptions>.RepositoryBase
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions).RepositoryBase
  nameWithType: RepositoryBase<TOptions>.RepositoryBase
  nameWithType.vb: RepositoryBase(Of TOptions).RepositoryBase
- uid: CG.Business.Repositories.RepositoryBase`1.Options
  name: Options
  href: api/CG.Business.Repositories.RepositoryBase-1.html#CG_Business_Repositories_RepositoryBase_1_Options
  commentId: P:CG.Business.Repositories.RepositoryBase`1.Options
  fullName: CG.Business.Repositories.RepositoryBase<TOptions>.Options
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions).Options
  nameWithType: RepositoryBase<TOptions>.Options
  nameWithType.vb: RepositoryBase(Of TOptions).Options
- uid: CG.Business.Repositories.RepositoryBase`1.Options*
  name: Options
  href: api/CG.Business.Repositories.RepositoryBase-1.html#CG_Business_Repositories_RepositoryBase_1_Options_
  commentId: Overload:CG.Business.Repositories.RepositoryBase`1.Options
  isSpec: "True"
  fullName: CG.Business.Repositories.RepositoryBase<TOptions>.Options
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions).Options
  nameWithType: RepositoryBase<TOptions>.Options
  nameWithType.vb: RepositoryBase(Of TOptions).Options
- uid: CG.Business.Repositories.RepositoryBase`2
  name: RepositoryBase<TEntity, TModel>
  href: api/CG.Business.Repositories.RepositoryBase-2.html
  commentId: T:CG.Business.Repositories.RepositoryBase`2
  name.vb: RepositoryBase(Of TEntity, TModel)
  fullName: CG.Business.Repositories.RepositoryBase<TEntity, TModel>
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TEntity, TModel)
  nameWithType: RepositoryBase<TEntity, TModel>
  nameWithType.vb: RepositoryBase(Of TEntity, TModel)
- uid: CG.Business.Repositories.RepositoryBase`2.ToEntity(`1)
  name: ToEntity(TModel)
  href: api/CG.Business.Repositories.RepositoryBase-2.html#CG_Business_Repositories_RepositoryBase_2_ToEntity__1_
  commentId: M:CG.Business.Repositories.RepositoryBase`2.ToEntity(`1)
  fullName: CG.Business.Repositories.RepositoryBase<TEntity, TModel>.ToEntity(TModel)
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TEntity, TModel).ToEntity(TModel)
  nameWithType: RepositoryBase<TEntity, TModel>.ToEntity(TModel)
  nameWithType.vb: RepositoryBase(Of TEntity, TModel).ToEntity(TModel)
- uid: CG.Business.Repositories.RepositoryBase`2.ToEntity*
  name: ToEntity
  href: api/CG.Business.Repositories.RepositoryBase-2.html#CG_Business_Repositories_RepositoryBase_2_ToEntity_
  commentId: Overload:CG.Business.Repositories.RepositoryBase`2.ToEntity
  isSpec: "True"
  fullName: CG.Business.Repositories.RepositoryBase<TEntity, TModel>.ToEntity
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TEntity, TModel).ToEntity
  nameWithType: RepositoryBase<TEntity, TModel>.ToEntity
  nameWithType.vb: RepositoryBase(Of TEntity, TModel).ToEntity
- uid: CG.Business.Repositories.RepositoryBase`2.ToModel(`0)
  name: ToModel(TEntity)
  href: api/CG.Business.Repositories.RepositoryBase-2.html#CG_Business_Repositories_RepositoryBase_2_ToModel__0_
  commentId: M:CG.Business.Repositories.RepositoryBase`2.ToModel(`0)
  fullName: CG.Business.Repositories.RepositoryBase<TEntity, TModel>.ToModel(TEntity)
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TEntity, TModel).ToModel(TEntity)
  nameWithType: RepositoryBase<TEntity, TModel>.ToModel(TEntity)
  nameWithType.vb: RepositoryBase(Of TEntity, TModel).ToModel(TEntity)
- uid: CG.Business.Repositories.RepositoryBase`2.ToModel*
  name: ToModel
  href: api/CG.Business.Repositories.RepositoryBase-2.html#CG_Business_Repositories_RepositoryBase_2_ToModel_
  commentId: Overload:CG.Business.Repositories.RepositoryBase`2.ToModel
  isSpec: "True"
  fullName: CG.Business.Repositories.RepositoryBase<TEntity, TModel>.ToModel
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TEntity, TModel).ToModel
  nameWithType: RepositoryBase<TEntity, TModel>.ToModel
  nameWithType.vb: RepositoryBase(Of TEntity, TModel).ToModel
- uid: CG.Business.Repositories.RepositoryBase`3
  name: RepositoryBase<TOptions, TEntity, TModel>
  href: api/CG.Business.Repositories.RepositoryBase-3.html
  commentId: T:CG.Business.Repositories.RepositoryBase`3
  name.vb: RepositoryBase(Of TOptions, TEntity, TModel)
  fullName: CG.Business.Repositories.RepositoryBase<TOptions, TEntity, TModel>
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions, TEntity, TModel)
  nameWithType: RepositoryBase<TOptions, TEntity, TModel>
  nameWithType.vb: RepositoryBase(Of TOptions, TEntity, TModel)
- uid: CG.Business.Repositories.RepositoryBase`3.#ctor(`0)
  name: RepositoryBase(TOptions)
  href: api/CG.Business.Repositories.RepositoryBase-3.html#CG_Business_Repositories_RepositoryBase_3__ctor__0_
  commentId: M:CG.Business.Repositories.RepositoryBase`3.#ctor(`0)
  fullName: CG.Business.Repositories.RepositoryBase<TOptions, TEntity, TModel>.RepositoryBase(TOptions)
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions, TEntity, TModel).RepositoryBase(TOptions)
  nameWithType: RepositoryBase<TOptions, TEntity, TModel>.RepositoryBase(TOptions)
  nameWithType.vb: RepositoryBase(Of TOptions, TEntity, TModel).RepositoryBase(TOptions)
- uid: CG.Business.Repositories.RepositoryBase`3.#ctor*
  name: RepositoryBase
  href: api/CG.Business.Repositories.RepositoryBase-3.html#CG_Business_Repositories_RepositoryBase_3__ctor_
  commentId: Overload:CG.Business.Repositories.RepositoryBase`3.#ctor
  isSpec: "True"
  fullName: CG.Business.Repositories.RepositoryBase<TOptions, TEntity, TModel>.RepositoryBase
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions, TEntity, TModel).RepositoryBase
  nameWithType: RepositoryBase<TOptions, TEntity, TModel>.RepositoryBase
  nameWithType.vb: RepositoryBase(Of TOptions, TEntity, TModel).RepositoryBase
- uid: CG.Business.Repositories.RepositoryBase`3.Options
  name: Options
  href: api/CG.Business.Repositories.RepositoryBase-3.html#CG_Business_Repositories_RepositoryBase_3_Options
  commentId: P:CG.Business.Repositories.RepositoryBase`3.Options
  fullName: CG.Business.Repositories.RepositoryBase<TOptions, TEntity, TModel>.Options
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions, TEntity, TModel).Options
  nameWithType: RepositoryBase<TOptions, TEntity, TModel>.Options
  nameWithType.vb: RepositoryBase(Of TOptions, TEntity, TModel).Options
- uid: CG.Business.Repositories.RepositoryBase`3.Options*
  name: Options
  href: api/CG.Business.Repositories.RepositoryBase-3.html#CG_Business_Repositories_RepositoryBase_3_Options_
  commentId: Overload:CG.Business.Repositories.RepositoryBase`3.Options
  isSpec: "True"
  fullName: CG.Business.Repositories.RepositoryBase<TOptions, TEntity, TModel>.Options
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions, TEntity, TModel).Options
  nameWithType: RepositoryBase<TOptions, TEntity, TModel>.Options
  nameWithType.vb: RepositoryBase(Of TOptions, TEntity, TModel).Options
- uid: CG.Business.Repositories.RepositoryException
  name: RepositoryException
  href: api/CG.Business.Repositories.RepositoryException.html
  commentId: T:CG.Business.Repositories.RepositoryException
  fullName: CG.Business.Repositories.RepositoryException
  nameWithType: RepositoryException
- uid: CG.Business.Repositories.RepositoryException.#ctor
  name: RepositoryException()
  href: api/CG.Business.Repositories.RepositoryException.html#CG_Business_Repositories_RepositoryException__ctor
  commentId: M:CG.Business.Repositories.RepositoryException.#ctor
  fullName: CG.Business.Repositories.RepositoryException.RepositoryException()
  nameWithType: RepositoryException.RepositoryException()
- uid: CG.Business.Repositories.RepositoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: RepositoryException(SerializationInfo, StreamingContext)
  href: api/CG.Business.Repositories.RepositoryException.html#CG_Business_Repositories_RepositoryException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:CG.Business.Repositories.RepositoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: CG.Business.Repositories.RepositoryException.RepositoryException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: RepositoryException.RepositoryException(SerializationInfo, StreamingContext)
- uid: CG.Business.Repositories.RepositoryException.#ctor(System.String)
  name: RepositoryException(String)
  href: api/CG.Business.Repositories.RepositoryException.html#CG_Business_Repositories_RepositoryException__ctor_System_String_
  commentId: M:CG.Business.Repositories.RepositoryException.#ctor(System.String)
  fullName: CG.Business.Repositories.RepositoryException.RepositoryException(System.String)
  nameWithType: RepositoryException.RepositoryException(String)
- uid: CG.Business.Repositories.RepositoryException.#ctor(System.String,System.Exception)
  name: RepositoryException(String, Exception)
  href: api/CG.Business.Repositories.RepositoryException.html#CG_Business_Repositories_RepositoryException__ctor_System_String_System_Exception_
  commentId: M:CG.Business.Repositories.RepositoryException.#ctor(System.String,System.Exception)
  fullName: CG.Business.Repositories.RepositoryException.RepositoryException(System.String, System.Exception)
  nameWithType: RepositoryException.RepositoryException(String, Exception)
- uid: CG.Business.Repositories.RepositoryException.#ctor*
  name: RepositoryException
  href: api/CG.Business.Repositories.RepositoryException.html#CG_Business_Repositories_RepositoryException__ctor_
  commentId: Overload:CG.Business.Repositories.RepositoryException.#ctor
  isSpec: "True"
  fullName: CG.Business.Repositories.RepositoryException.RepositoryException
  nameWithType: RepositoryException.RepositoryException
- uid: CG.Business.Services
  name: CG.Business.Services
  href: api/CG.Business.Services.html
  commentId: N:CG.Business.Services
  fullName: CG.Business.Services
  nameWithType: CG.Business.Services
- uid: CG.Business.Services.IService
  name: IService
  href: api/CG.Business.Services.IService.html
  commentId: T:CG.Business.Services.IService
  fullName: CG.Business.Services.IService
  nameWithType: IService
- uid: CG.Business.Services.Options
  name: CG.Business.Services.Options
  href: api/CG.Business.Services.Options.html
  commentId: N:CG.Business.Services.Options
  fullName: CG.Business.Services.Options
  nameWithType: CG.Business.Services.Options
- uid: CG.Business.Services.Options.ServiceOptions
  name: ServiceOptions
  href: api/CG.Business.Services.Options.ServiceOptions.html
  commentId: T:CG.Business.Services.Options.ServiceOptions
  fullName: CG.Business.Services.Options.ServiceOptions
  nameWithType: ServiceOptions
- uid: CG.Business.Services.ServiceBase
  name: ServiceBase
  href: api/CG.Business.Services.ServiceBase.html
  commentId: T:CG.Business.Services.ServiceBase
  fullName: CG.Business.Services.ServiceBase
  nameWithType: ServiceBase
- uid: CG.Business.Services.ServiceBase`1
  name: ServiceBase<TOptions>
  href: api/CG.Business.Services.ServiceBase-1.html
  commentId: T:CG.Business.Services.ServiceBase`1
  name.vb: ServiceBase(Of TOptions)
  fullName: CG.Business.Services.ServiceBase<TOptions>
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions)
  nameWithType: ServiceBase<TOptions>
  nameWithType.vb: ServiceBase(Of TOptions)
- uid: CG.Business.Services.ServiceBase`1.#ctor(`0)
  name: ServiceBase(TOptions)
  href: api/CG.Business.Services.ServiceBase-1.html#CG_Business_Services_ServiceBase_1__ctor__0_
  commentId: M:CG.Business.Services.ServiceBase`1.#ctor(`0)
  fullName: CG.Business.Services.ServiceBase<TOptions>.ServiceBase(TOptions)
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions).ServiceBase(TOptions)
  nameWithType: ServiceBase<TOptions>.ServiceBase(TOptions)
  nameWithType.vb: ServiceBase(Of TOptions).ServiceBase(TOptions)
- uid: CG.Business.Services.ServiceBase`1.#ctor*
  name: ServiceBase
  href: api/CG.Business.Services.ServiceBase-1.html#CG_Business_Services_ServiceBase_1__ctor_
  commentId: Overload:CG.Business.Services.ServiceBase`1.#ctor
  isSpec: "True"
  fullName: CG.Business.Services.ServiceBase<TOptions>.ServiceBase
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions).ServiceBase
  nameWithType: ServiceBase<TOptions>.ServiceBase
  nameWithType.vb: ServiceBase(Of TOptions).ServiceBase
- uid: CG.Business.Services.ServiceBase`1.Options
  name: Options
  href: api/CG.Business.Services.ServiceBase-1.html#CG_Business_Services_ServiceBase_1_Options
  commentId: P:CG.Business.Services.ServiceBase`1.Options
  fullName: CG.Business.Services.ServiceBase<TOptions>.Options
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions).Options
  nameWithType: ServiceBase<TOptions>.Options
  nameWithType.vb: ServiceBase(Of TOptions).Options
- uid: CG.Business.Services.ServiceBase`1.Options*
  name: Options
  href: api/CG.Business.Services.ServiceBase-1.html#CG_Business_Services_ServiceBase_1_Options_
  commentId: Overload:CG.Business.Services.ServiceBase`1.Options
  isSpec: "True"
  fullName: CG.Business.Services.ServiceBase<TOptions>.Options
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions).Options
  nameWithType: ServiceBase<TOptions>.Options
  nameWithType.vb: ServiceBase(Of TOptions).Options
- uid: CG.Business.Services.ServiceBase`2
  name: ServiceBase<TEntity, TModel>
  href: api/CG.Business.Services.ServiceBase-2.html
  commentId: T:CG.Business.Services.ServiceBase`2
  name.vb: ServiceBase(Of TEntity, TModel)
  fullName: CG.Business.Services.ServiceBase<TEntity, TModel>
  fullName.vb: CG.Business.Services.ServiceBase(Of TEntity, TModel)
  nameWithType: ServiceBase<TEntity, TModel>
  nameWithType.vb: ServiceBase(Of TEntity, TModel)
- uid: CG.Business.Services.ServiceBase`2.ToEntity(`1)
  name: ToEntity(TModel)
  href: api/CG.Business.Services.ServiceBase-2.html#CG_Business_Services_ServiceBase_2_ToEntity__1_
  commentId: M:CG.Business.Services.ServiceBase`2.ToEntity(`1)
  fullName: CG.Business.Services.ServiceBase<TEntity, TModel>.ToEntity(TModel)
  fullName.vb: CG.Business.Services.ServiceBase(Of TEntity, TModel).ToEntity(TModel)
  nameWithType: ServiceBase<TEntity, TModel>.ToEntity(TModel)
  nameWithType.vb: ServiceBase(Of TEntity, TModel).ToEntity(TModel)
- uid: CG.Business.Services.ServiceBase`2.ToEntity*
  name: ToEntity
  href: api/CG.Business.Services.ServiceBase-2.html#CG_Business_Services_ServiceBase_2_ToEntity_
  commentId: Overload:CG.Business.Services.ServiceBase`2.ToEntity
  isSpec: "True"
  fullName: CG.Business.Services.ServiceBase<TEntity, TModel>.ToEntity
  fullName.vb: CG.Business.Services.ServiceBase(Of TEntity, TModel).ToEntity
  nameWithType: ServiceBase<TEntity, TModel>.ToEntity
  nameWithType.vb: ServiceBase(Of TEntity, TModel).ToEntity
- uid: CG.Business.Services.ServiceBase`2.ToModel(`0)
  name: ToModel(TEntity)
  href: api/CG.Business.Services.ServiceBase-2.html#CG_Business_Services_ServiceBase_2_ToModel__0_
  commentId: M:CG.Business.Services.ServiceBase`2.ToModel(`0)
  fullName: CG.Business.Services.ServiceBase<TEntity, TModel>.ToModel(TEntity)
  fullName.vb: CG.Business.Services.ServiceBase(Of TEntity, TModel).ToModel(TEntity)
  nameWithType: ServiceBase<TEntity, TModel>.ToModel(TEntity)
  nameWithType.vb: ServiceBase(Of TEntity, TModel).ToModel(TEntity)
- uid: CG.Business.Services.ServiceBase`2.ToModel*
  name: ToModel
  href: api/CG.Business.Services.ServiceBase-2.html#CG_Business_Services_ServiceBase_2_ToModel_
  commentId: Overload:CG.Business.Services.ServiceBase`2.ToModel
  isSpec: "True"
  fullName: CG.Business.Services.ServiceBase<TEntity, TModel>.ToModel
  fullName.vb: CG.Business.Services.ServiceBase(Of TEntity, TModel).ToModel
  nameWithType: ServiceBase<TEntity, TModel>.ToModel
  nameWithType.vb: ServiceBase(Of TEntity, TModel).ToModel
- uid: CG.Business.Services.ServiceBase`3
  name: ServiceBase<TOptions, TEntity, TModel>
  href: api/CG.Business.Services.ServiceBase-3.html
  commentId: T:CG.Business.Services.ServiceBase`3
  name.vb: ServiceBase(Of TOptions, TEntity, TModel)
  fullName: CG.Business.Services.ServiceBase<TOptions, TEntity, TModel>
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions, TEntity, TModel)
  nameWithType: ServiceBase<TOptions, TEntity, TModel>
  nameWithType.vb: ServiceBase(Of TOptions, TEntity, TModel)
- uid: CG.Business.Services.ServiceBase`3.#ctor(`0)
  name: ServiceBase(TOptions)
  href: api/CG.Business.Services.ServiceBase-3.html#CG_Business_Services_ServiceBase_3__ctor__0_
  commentId: M:CG.Business.Services.ServiceBase`3.#ctor(`0)
  fullName: CG.Business.Services.ServiceBase<TOptions, TEntity, TModel>.ServiceBase(TOptions)
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions, TEntity, TModel).ServiceBase(TOptions)
  nameWithType: ServiceBase<TOptions, TEntity, TModel>.ServiceBase(TOptions)
  nameWithType.vb: ServiceBase(Of TOptions, TEntity, TModel).ServiceBase(TOptions)
- uid: CG.Business.Services.ServiceBase`3.#ctor*
  name: ServiceBase
  href: api/CG.Business.Services.ServiceBase-3.html#CG_Business_Services_ServiceBase_3__ctor_
  commentId: Overload:CG.Business.Services.ServiceBase`3.#ctor
  isSpec: "True"
  fullName: CG.Business.Services.ServiceBase<TOptions, TEntity, TModel>.ServiceBase
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions, TEntity, TModel).ServiceBase
  nameWithType: ServiceBase<TOptions, TEntity, TModel>.ServiceBase
  nameWithType.vb: ServiceBase(Of TOptions, TEntity, TModel).ServiceBase
- uid: CG.Business.Services.ServiceBase`3.Options
  name: Options
  href: api/CG.Business.Services.ServiceBase-3.html#CG_Business_Services_ServiceBase_3_Options
  commentId: P:CG.Business.Services.ServiceBase`3.Options
  fullName: CG.Business.Services.ServiceBase<TOptions, TEntity, TModel>.Options
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions, TEntity, TModel).Options
  nameWithType: ServiceBase<TOptions, TEntity, TModel>.Options
  nameWithType.vb: ServiceBase(Of TOptions, TEntity, TModel).Options
- uid: CG.Business.Services.ServiceBase`3.Options*
  name: Options
  href: api/CG.Business.Services.ServiceBase-3.html#CG_Business_Services_ServiceBase_3_Options_
  commentId: Overload:CG.Business.Services.ServiceBase`3.Options
  isSpec: "True"
  fullName: CG.Business.Services.ServiceBase<TOptions, TEntity, TModel>.Options
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions, TEntity, TModel).Options
  nameWithType: ServiceBase<TOptions, TEntity, TModel>.Options
  nameWithType.vb: ServiceBase(Of TOptions, TEntity, TModel).Options
- uid: CG.Business.Services.ServiceException
  name: ServiceException
  href: api/CG.Business.Services.ServiceException.html
  commentId: T:CG.Business.Services.ServiceException
  fullName: CG.Business.Services.ServiceException
  nameWithType: ServiceException
- uid: CG.Business.Services.ServiceException.#ctor
  name: ServiceException()
  href: api/CG.Business.Services.ServiceException.html#CG_Business_Services_ServiceException__ctor
  commentId: M:CG.Business.Services.ServiceException.#ctor
  fullName: CG.Business.Services.ServiceException.ServiceException()
  nameWithType: ServiceException.ServiceException()
- uid: CG.Business.Services.ServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: ServiceException(SerializationInfo, StreamingContext)
  href: api/CG.Business.Services.ServiceException.html#CG_Business_Services_ServiceException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:CG.Business.Services.ServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: CG.Business.Services.ServiceException.ServiceException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: ServiceException.ServiceException(SerializationInfo, StreamingContext)
- uid: CG.Business.Services.ServiceException.#ctor(System.String)
  name: ServiceException(String)
  href: api/CG.Business.Services.ServiceException.html#CG_Business_Services_ServiceException__ctor_System_String_
  commentId: M:CG.Business.Services.ServiceException.#ctor(System.String)
  fullName: CG.Business.Services.ServiceException.ServiceException(System.String)
  nameWithType: ServiceException.ServiceException(String)
- uid: CG.Business.Services.ServiceException.#ctor(System.String,System.Exception)
  name: ServiceException(String, Exception)
  href: api/CG.Business.Services.ServiceException.html#CG_Business_Services_ServiceException__ctor_System_String_System_Exception_
  commentId: M:CG.Business.Services.ServiceException.#ctor(System.String,System.Exception)
  fullName: CG.Business.Services.ServiceException.ServiceException(System.String, System.Exception)
  nameWithType: ServiceException.ServiceException(String, Exception)
- uid: CG.Business.Services.ServiceException.#ctor*
  name: ServiceException
  href: api/CG.Business.Services.ServiceException.html#CG_Business_Services_ServiceException__ctor_
  commentId: Overload:CG.Business.Services.ServiceException.#ctor
  isSpec: "True"
  fullName: CG.Business.Services.ServiceException.ServiceException
  nameWithType: ServiceException.ServiceException
- uid: CG.Business.Stores
  name: CG.Business.Stores
  href: api/CG.Business.Stores.html
  commentId: N:CG.Business.Stores
  fullName: CG.Business.Stores
  nameWithType: CG.Business.Stores
- uid: CG.Business.Stores.IStore
  name: IStore
  href: api/CG.Business.Stores.IStore.html
  commentId: T:CG.Business.Stores.IStore
  fullName: CG.Business.Stores.IStore
  nameWithType: IStore
- uid: CG.Business.Stores.Options
  name: CG.Business.Stores.Options
  href: api/CG.Business.Stores.Options.html
  commentId: N:CG.Business.Stores.Options
  fullName: CG.Business.Stores.Options
  nameWithType: CG.Business.Stores.Options
- uid: CG.Business.Stores.Options.StoreOptions
  name: StoreOptions
  href: api/CG.Business.Stores.Options.StoreOptions.html
  commentId: T:CG.Business.Stores.Options.StoreOptions
  fullName: CG.Business.Stores.Options.StoreOptions
  nameWithType: StoreOptions
- uid: CG.Business.Stores.StoreBase
  name: StoreBase
  href: api/CG.Business.Stores.StoreBase.html
  commentId: T:CG.Business.Stores.StoreBase
  fullName: CG.Business.Stores.StoreBase
  nameWithType: StoreBase
- uid: CG.Business.Stores.StoreBase`1
  name: StoreBase<TOptions>
  href: api/CG.Business.Stores.StoreBase-1.html
  commentId: T:CG.Business.Stores.StoreBase`1
  name.vb: StoreBase(Of TOptions)
  fullName: CG.Business.Stores.StoreBase<TOptions>
  fullName.vb: CG.Business.Stores.StoreBase(Of TOptions)
  nameWithType: StoreBase<TOptions>
  nameWithType.vb: StoreBase(Of TOptions)
- uid: CG.Business.Stores.StoreBase`1.#ctor(`0)
  name: StoreBase(TOptions)
  href: api/CG.Business.Stores.StoreBase-1.html#CG_Business_Stores_StoreBase_1__ctor__0_
  commentId: M:CG.Business.Stores.StoreBase`1.#ctor(`0)
  fullName: CG.Business.Stores.StoreBase<TOptions>.StoreBase(TOptions)
  fullName.vb: CG.Business.Stores.StoreBase(Of TOptions).StoreBase(TOptions)
  nameWithType: StoreBase<TOptions>.StoreBase(TOptions)
  nameWithType.vb: StoreBase(Of TOptions).StoreBase(TOptions)
- uid: CG.Business.Stores.StoreBase`1.#ctor*
  name: StoreBase
  href: api/CG.Business.Stores.StoreBase-1.html#CG_Business_Stores_StoreBase_1__ctor_
  commentId: Overload:CG.Business.Stores.StoreBase`1.#ctor
  isSpec: "True"
  fullName: CG.Business.Stores.StoreBase<TOptions>.StoreBase
  fullName.vb: CG.Business.Stores.StoreBase(Of TOptions).StoreBase
  nameWithType: StoreBase<TOptions>.StoreBase
  nameWithType.vb: StoreBase(Of TOptions).StoreBase
- uid: CG.Business.Stores.StoreBase`1.Options
  name: Options
  href: api/CG.Business.Stores.StoreBase-1.html#CG_Business_Stores_StoreBase_1_Options
  commentId: P:CG.Business.Stores.StoreBase`1.Options
  fullName: CG.Business.Stores.StoreBase<TOptions>.Options
  fullName.vb: CG.Business.Stores.StoreBase(Of TOptions).Options
  nameWithType: StoreBase<TOptions>.Options
  nameWithType.vb: StoreBase(Of TOptions).Options
- uid: CG.Business.Stores.StoreBase`1.Options*
  name: Options
  href: api/CG.Business.Stores.StoreBase-1.html#CG_Business_Stores_StoreBase_1_Options_
  commentId: Overload:CG.Business.Stores.StoreBase`1.Options
  isSpec: "True"
  fullName: CG.Business.Stores.StoreBase<TOptions>.Options
  fullName.vb: CG.Business.Stores.StoreBase(Of TOptions).Options
  nameWithType: StoreBase<TOptions>.Options
  nameWithType.vb: StoreBase(Of TOptions).Options
- uid: CG.Business.Stores.StoreException
  name: StoreException
  href: api/CG.Business.Stores.StoreException.html
  commentId: T:CG.Business.Stores.StoreException
  fullName: CG.Business.Stores.StoreException
  nameWithType: StoreException
- uid: CG.Business.Stores.StoreException.#ctor
  name: StoreException()
  href: api/CG.Business.Stores.StoreException.html#CG_Business_Stores_StoreException__ctor
  commentId: M:CG.Business.Stores.StoreException.#ctor
  fullName: CG.Business.Stores.StoreException.StoreException()
  nameWithType: StoreException.StoreException()
- uid: CG.Business.Stores.StoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: StoreException(SerializationInfo, StreamingContext)
  href: api/CG.Business.Stores.StoreException.html#CG_Business_Stores_StoreException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:CG.Business.Stores.StoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: CG.Business.Stores.StoreException.StoreException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: StoreException.StoreException(SerializationInfo, StreamingContext)
- uid: CG.Business.Stores.StoreException.#ctor(System.String)
  name: StoreException(String)
  href: api/CG.Business.Stores.StoreException.html#CG_Business_Stores_StoreException__ctor_System_String_
  commentId: M:CG.Business.Stores.StoreException.#ctor(System.String)
  fullName: CG.Business.Stores.StoreException.StoreException(System.String)
  nameWithType: StoreException.StoreException(String)
- uid: CG.Business.Stores.StoreException.#ctor(System.String,System.Exception)
  name: StoreException(String, Exception)
  href: api/CG.Business.Stores.StoreException.html#CG_Business_Stores_StoreException__ctor_System_String_System_Exception_
  commentId: M:CG.Business.Stores.StoreException.#ctor(System.String,System.Exception)
  fullName: CG.Business.Stores.StoreException.StoreException(System.String, System.Exception)
  nameWithType: StoreException.StoreException(String, Exception)
- uid: CG.Business.Stores.StoreException.#ctor*
  name: StoreException
  href: api/CG.Business.Stores.StoreException.html#CG_Business_Stores_StoreException__ctor_
  commentId: Overload:CG.Business.Stores.StoreException.#ctor
  isSpec: "True"
  fullName: CG.Business.Stores.StoreException.StoreException
  nameWithType: StoreException.StoreException
- uid: CG.Business.Strategies
  name: CG.Business.Strategies
  href: api/CG.Business.Strategies.html
  commentId: N:CG.Business.Strategies
  fullName: CG.Business.Strategies
  nameWithType: CG.Business.Strategies
- uid: CG.Business.Strategies.IStrategy
  name: IStrategy
  href: api/CG.Business.Strategies.IStrategy.html
  commentId: T:CG.Business.Strategies.IStrategy
  fullName: CG.Business.Strategies.IStrategy
  nameWithType: IStrategy
- uid: CG.Business.Strategies.Options
  name: CG.Business.Strategies.Options
  href: api/CG.Business.Strategies.Options.html
  commentId: N:CG.Business.Strategies.Options
  fullName: CG.Business.Strategies.Options
  nameWithType: CG.Business.Strategies.Options
- uid: CG.Business.Strategies.Options.StrategyOptions
  name: StrategyOptions
  href: api/CG.Business.Strategies.Options.StrategyOptions.html
  commentId: T:CG.Business.Strategies.Options.StrategyOptions
  fullName: CG.Business.Strategies.Options.StrategyOptions
  nameWithType: StrategyOptions
- uid: CG.Business.Strategies.StrategyBase
  name: StrategyBase
  href: api/CG.Business.Strategies.StrategyBase.html
  commentId: T:CG.Business.Strategies.StrategyBase
  fullName: CG.Business.Strategies.StrategyBase
  nameWithType: StrategyBase
- uid: CG.Business.Strategies.StrategyBase`1
  name: StrategyBase<TOptions>
  href: api/CG.Business.Strategies.StrategyBase-1.html
  commentId: T:CG.Business.Strategies.StrategyBase`1
  name.vb: StrategyBase(Of TOptions)
  fullName: CG.Business.Strategies.StrategyBase<TOptions>
  fullName.vb: CG.Business.Strategies.StrategyBase(Of TOptions)
  nameWithType: StrategyBase<TOptions>
  nameWithType.vb: StrategyBase(Of TOptions)
- uid: CG.Business.Strategies.StrategyBase`1.#ctor(`0)
  name: StrategyBase(TOptions)
  href: api/CG.Business.Strategies.StrategyBase-1.html#CG_Business_Strategies_StrategyBase_1__ctor__0_
  commentId: M:CG.Business.Strategies.StrategyBase`1.#ctor(`0)
  fullName: CG.Business.Strategies.StrategyBase<TOptions>.StrategyBase(TOptions)
  fullName.vb: CG.Business.Strategies.StrategyBase(Of TOptions).StrategyBase(TOptions)
  nameWithType: StrategyBase<TOptions>.StrategyBase(TOptions)
  nameWithType.vb: StrategyBase(Of TOptions).StrategyBase(TOptions)
- uid: CG.Business.Strategies.StrategyBase`1.#ctor*
  name: StrategyBase
  href: api/CG.Business.Strategies.StrategyBase-1.html#CG_Business_Strategies_StrategyBase_1__ctor_
  commentId: Overload:CG.Business.Strategies.StrategyBase`1.#ctor
  isSpec: "True"
  fullName: CG.Business.Strategies.StrategyBase<TOptions>.StrategyBase
  fullName.vb: CG.Business.Strategies.StrategyBase(Of TOptions).StrategyBase
  nameWithType: StrategyBase<TOptions>.StrategyBase
  nameWithType.vb: StrategyBase(Of TOptions).StrategyBase
- uid: CG.Business.Strategies.StrategyBase`1.Options
  name: Options
  href: api/CG.Business.Strategies.StrategyBase-1.html#CG_Business_Strategies_StrategyBase_1_Options
  commentId: P:CG.Business.Strategies.StrategyBase`1.Options
  fullName: CG.Business.Strategies.StrategyBase<TOptions>.Options
  fullName.vb: CG.Business.Strategies.StrategyBase(Of TOptions).Options
  nameWithType: StrategyBase<TOptions>.Options
  nameWithType.vb: StrategyBase(Of TOptions).Options
- uid: CG.Business.Strategies.StrategyBase`1.Options*
  name: Options
  href: api/CG.Business.Strategies.StrategyBase-1.html#CG_Business_Strategies_StrategyBase_1_Options_
  commentId: Overload:CG.Business.Strategies.StrategyBase`1.Options
  isSpec: "True"
  fullName: CG.Business.Strategies.StrategyBase<TOptions>.Options
  fullName.vb: CG.Business.Strategies.StrategyBase(Of TOptions).Options
  nameWithType: StrategyBase<TOptions>.Options
  nameWithType.vb: StrategyBase(Of TOptions).Options
- uid: CG.Business.Strategys
  name: CG.Business.Strategys
  href: api/CG.Business.Strategys.html
  commentId: N:CG.Business.Strategys
  fullName: CG.Business.Strategys
  nameWithType: CG.Business.Strategys
- uid: CG.Business.Strategys.StrategyException
  name: StrategyException
  href: api/CG.Business.Strategys.StrategyException.html
  commentId: T:CG.Business.Strategys.StrategyException
  fullName: CG.Business.Strategys.StrategyException
  nameWithType: StrategyException
- uid: CG.Business.Strategys.StrategyException.#ctor
  name: StrategyException()
  href: api/CG.Business.Strategys.StrategyException.html#CG_Business_Strategys_StrategyException__ctor
  commentId: M:CG.Business.Strategys.StrategyException.#ctor
  fullName: CG.Business.Strategys.StrategyException.StrategyException()
  nameWithType: StrategyException.StrategyException()
- uid: CG.Business.Strategys.StrategyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: StrategyException(SerializationInfo, StreamingContext)
  href: api/CG.Business.Strategys.StrategyException.html#CG_Business_Strategys_StrategyException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:CG.Business.Strategys.StrategyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: CG.Business.Strategys.StrategyException.StrategyException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: StrategyException.StrategyException(SerializationInfo, StreamingContext)
- uid: CG.Business.Strategys.StrategyException.#ctor(System.String)
  name: StrategyException(String)
  href: api/CG.Business.Strategys.StrategyException.html#CG_Business_Strategys_StrategyException__ctor_System_String_
  commentId: M:CG.Business.Strategys.StrategyException.#ctor(System.String)
  fullName: CG.Business.Strategys.StrategyException.StrategyException(System.String)
  nameWithType: StrategyException.StrategyException(String)
- uid: CG.Business.Strategys.StrategyException.#ctor(System.String,System.Exception)
  name: StrategyException(String, Exception)
  href: api/CG.Business.Strategys.StrategyException.html#CG_Business_Strategys_StrategyException__ctor_System_String_System_Exception_
  commentId: M:CG.Business.Strategys.StrategyException.#ctor(System.String,System.Exception)
  fullName: CG.Business.Strategys.StrategyException.StrategyException(System.String, System.Exception)
  nameWithType: StrategyException.StrategyException(String, Exception)
- uid: CG.Business.Strategys.StrategyException.#ctor*
  name: StrategyException
  href: api/CG.Business.Strategys.StrategyException.html#CG_Business_Strategys_StrategyException__ctor_
  commentId: Overload:CG.Business.Strategys.StrategyException.#ctor
  isSpec: "True"
  fullName: CG.Business.Strategys.StrategyException.StrategyException
  nameWithType: StrategyException.StrategyException
