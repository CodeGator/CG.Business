### YamlMime:XRefMap
sorted: true
references:
- uid: CG.Business
  name: CG.Business
  href: api/CG.Business.html
  commentId: N:CG.Business
  fullName: CG.Business
  nameWithType: CG.Business
- uid: CG.Business.Builders
  name: CG.Business.Builders
  href: api/CG.Business.Builders.html
  commentId: N:CG.Business.Builders
  fullName: CG.Business.Builders
  nameWithType: CG.Business.Builders
- uid: CG.Business.Builders.BuilderBase
  name: BuilderBase
  href: api/CG.Business.Builders.BuilderBase.html
  commentId: T:CG.Business.Builders.BuilderBase
  fullName: CG.Business.Builders.BuilderBase
  nameWithType: BuilderBase
- uid: CG.Business.Builders.BuilderBase.ServiceCollection
  name: ServiceCollection
  href: api/CG.Business.Builders.BuilderBase.html#CG_Business_Builders_BuilderBase_ServiceCollection
  commentId: P:CG.Business.Builders.BuilderBase.ServiceCollection
  fullName: CG.Business.Builders.BuilderBase.ServiceCollection
  nameWithType: BuilderBase.ServiceCollection
- uid: CG.Business.Builders.BuilderBase.ServiceCollection*
  name: ServiceCollection
  href: api/CG.Business.Builders.BuilderBase.html#CG_Business_Builders_BuilderBase_ServiceCollection_
  commentId: Overload:CG.Business.Builders.BuilderBase.ServiceCollection
  isSpec: "True"
  fullName: CG.Business.Builders.BuilderBase.ServiceCollection
  nameWithType: BuilderBase.ServiceCollection
- uid: CG.Business.Builders.IBuilder
  name: IBuilder
  href: api/CG.Business.Builders.IBuilder.html
  commentId: T:CG.Business.Builders.IBuilder
  fullName: CG.Business.Builders.IBuilder
  nameWithType: IBuilder
- uid: CG.Business.Builders.IBuilder.ServiceCollection
  name: ServiceCollection
  href: api/CG.Business.Builders.IBuilder.html#CG_Business_Builders_IBuilder_ServiceCollection
  commentId: P:CG.Business.Builders.IBuilder.ServiceCollection
  fullName: CG.Business.Builders.IBuilder.ServiceCollection
  nameWithType: IBuilder.ServiceCollection
- uid: CG.Business.Builders.IBuilder.ServiceCollection*
  name: ServiceCollection
  href: api/CG.Business.Builders.IBuilder.html#CG_Business_Builders_IBuilder_ServiceCollection_
  commentId: Overload:CG.Business.Builders.IBuilder.ServiceCollection
  isSpec: "True"
  fullName: CG.Business.Builders.IBuilder.ServiceCollection
  nameWithType: IBuilder.ServiceCollection
- uid: CG.Business.BusinessException
  name: BusinessException
  href: api/CG.Business.BusinessException.html
  commentId: T:CG.Business.BusinessException
  fullName: CG.Business.BusinessException
  nameWithType: BusinessException
- uid: CG.Business.BusinessException.#ctor
  name: BusinessException()
  href: api/CG.Business.BusinessException.html#CG_Business_BusinessException__ctor
  commentId: M:CG.Business.BusinessException.#ctor
  fullName: CG.Business.BusinessException.BusinessException()
  nameWithType: BusinessException.BusinessException()
- uid: CG.Business.BusinessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: BusinessException(SerializationInfo, StreamingContext)
  href: api/CG.Business.BusinessException.html#CG_Business_BusinessException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:CG.Business.BusinessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: CG.Business.BusinessException.BusinessException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: BusinessException.BusinessException(SerializationInfo, StreamingContext)
- uid: CG.Business.BusinessException.#ctor(System.String)
  name: BusinessException(String)
  href: api/CG.Business.BusinessException.html#CG_Business_BusinessException__ctor_System_String_
  commentId: M:CG.Business.BusinessException.#ctor(System.String)
  fullName: CG.Business.BusinessException.BusinessException(System.String)
  nameWithType: BusinessException.BusinessException(String)
- uid: CG.Business.BusinessException.#ctor(System.String,System.Exception)
  name: BusinessException(String, Exception)
  href: api/CG.Business.BusinessException.html#CG_Business_BusinessException__ctor_System_String_System_Exception_
  commentId: M:CG.Business.BusinessException.#ctor(System.String,System.Exception)
  fullName: CG.Business.BusinessException.BusinessException(System.String, System.Exception)
  nameWithType: BusinessException.BusinessException(String, Exception)
- uid: CG.Business.BusinessException.#ctor*
  name: BusinessException
  href: api/CG.Business.BusinessException.html#CG_Business_BusinessException__ctor_
  commentId: Overload:CG.Business.BusinessException.#ctor
  isSpec: "True"
  fullName: CG.Business.BusinessException.BusinessException
  nameWithType: BusinessException.BusinessException
- uid: CG.Business.Clients
  name: CG.Business.Clients
  href: api/CG.Business.Clients.html
  commentId: N:CG.Business.Clients
  fullName: CG.Business.Clients
  nameWithType: CG.Business.Clients
- uid: CG.Business.Clients.ClientBase
  name: ClientBase
  href: api/CG.Business.Clients.ClientBase.html
  commentId: T:CG.Business.Clients.ClientBase
  fullName: CG.Business.Clients.ClientBase
  nameWithType: ClientBase
- uid: CG.Business.Clients.ClientBase`1
  name: ClientBase<TOptions>
  href: api/CG.Business.Clients.ClientBase-1.html
  commentId: T:CG.Business.Clients.ClientBase`1
  name.vb: ClientBase(Of TOptions)
  fullName: CG.Business.Clients.ClientBase<TOptions>
  fullName.vb: CG.Business.Clients.ClientBase(Of TOptions)
  nameWithType: ClientBase<TOptions>
  nameWithType.vb: ClientBase(Of TOptions)
- uid: CG.Business.Clients.ClientBase`1.#ctor(Microsoft.Extensions.Options.IOptions{`0})
  name: ClientBase(IOptions<TOptions>)
  href: api/CG.Business.Clients.ClientBase-1.html#CG_Business_Clients_ClientBase_1__ctor_Microsoft_Extensions_Options_IOptions__0__
  commentId: M:CG.Business.Clients.ClientBase`1.#ctor(Microsoft.Extensions.Options.IOptions{`0})
  name.vb: ClientBase(IOptions(Of TOptions))
  fullName: CG.Business.Clients.ClientBase<TOptions>.ClientBase(Microsoft.Extensions.Options.IOptions<TOptions>)
  fullName.vb: CG.Business.Clients.ClientBase(Of TOptions).ClientBase(Microsoft.Extensions.Options.IOptions(Of TOptions))
  nameWithType: ClientBase<TOptions>.ClientBase(IOptions<TOptions>)
  nameWithType.vb: ClientBase(Of TOptions).ClientBase(IOptions(Of TOptions))
- uid: CG.Business.Clients.ClientBase`1.#ctor*
  name: ClientBase
  href: api/CG.Business.Clients.ClientBase-1.html#CG_Business_Clients_ClientBase_1__ctor_
  commentId: Overload:CG.Business.Clients.ClientBase`1.#ctor
  isSpec: "True"
  fullName: CG.Business.Clients.ClientBase<TOptions>.ClientBase
  fullName.vb: CG.Business.Clients.ClientBase(Of TOptions).ClientBase
  nameWithType: ClientBase<TOptions>.ClientBase
  nameWithType.vb: ClientBase(Of TOptions).ClientBase
- uid: CG.Business.Clients.ClientBase`1.Options
  name: Options
  href: api/CG.Business.Clients.ClientBase-1.html#CG_Business_Clients_ClientBase_1_Options
  commentId: P:CG.Business.Clients.ClientBase`1.Options
  fullName: CG.Business.Clients.ClientBase<TOptions>.Options
  fullName.vb: CG.Business.Clients.ClientBase(Of TOptions).Options
  nameWithType: ClientBase<TOptions>.Options
  nameWithType.vb: ClientBase(Of TOptions).Options
- uid: CG.Business.Clients.ClientBase`1.Options*
  name: Options
  href: api/CG.Business.Clients.ClientBase-1.html#CG_Business_Clients_ClientBase_1_Options_
  commentId: Overload:CG.Business.Clients.ClientBase`1.Options
  isSpec: "True"
  fullName: CG.Business.Clients.ClientBase<TOptions>.Options
  fullName.vb: CG.Business.Clients.ClientBase(Of TOptions).Options
  nameWithType: ClientBase<TOptions>.Options
  nameWithType.vb: ClientBase(Of TOptions).Options
- uid: CG.Business.Clients.ClientException
  name: ClientException
  href: api/CG.Business.Clients.ClientException.html
  commentId: T:CG.Business.Clients.ClientException
  fullName: CG.Business.Clients.ClientException
  nameWithType: ClientException
- uid: CG.Business.Clients.ClientException.#ctor
  name: ClientException()
  href: api/CG.Business.Clients.ClientException.html#CG_Business_Clients_ClientException__ctor
  commentId: M:CG.Business.Clients.ClientException.#ctor
  fullName: CG.Business.Clients.ClientException.ClientException()
  nameWithType: ClientException.ClientException()
- uid: CG.Business.Clients.ClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: ClientException(SerializationInfo, StreamingContext)
  href: api/CG.Business.Clients.ClientException.html#CG_Business_Clients_ClientException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:CG.Business.Clients.ClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: CG.Business.Clients.ClientException.ClientException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: ClientException.ClientException(SerializationInfo, StreamingContext)
- uid: CG.Business.Clients.ClientException.#ctor(System.String)
  name: ClientException(String)
  href: api/CG.Business.Clients.ClientException.html#CG_Business_Clients_ClientException__ctor_System_String_
  commentId: M:CG.Business.Clients.ClientException.#ctor(System.String)
  fullName: CG.Business.Clients.ClientException.ClientException(System.String)
  nameWithType: ClientException.ClientException(String)
- uid: CG.Business.Clients.ClientException.#ctor(System.String,System.Exception)
  name: ClientException(String, Exception)
  href: api/CG.Business.Clients.ClientException.html#CG_Business_Clients_ClientException__ctor_System_String_System_Exception_
  commentId: M:CG.Business.Clients.ClientException.#ctor(System.String,System.Exception)
  fullName: CG.Business.Clients.ClientException.ClientException(System.String, System.Exception)
  nameWithType: ClientException.ClientException(String, Exception)
- uid: CG.Business.Clients.ClientException.#ctor*
  name: ClientException
  href: api/CG.Business.Clients.ClientException.html#CG_Business_Clients_ClientException__ctor_
  commentId: Overload:CG.Business.Clients.ClientException.#ctor
  isSpec: "True"
  fullName: CG.Business.Clients.ClientException.ClientException
  nameWithType: ClientException.ClientException
- uid: CG.Business.Clients.IClient
  name: IClient
  href: api/CG.Business.Clients.IClient.html
  commentId: T:CG.Business.Clients.IClient
  fullName: CG.Business.Clients.IClient
  nameWithType: IClient
- uid: CG.Business.Clients.Options
  name: CG.Business.Clients.Options
  href: api/CG.Business.Clients.Options.html
  commentId: N:CG.Business.Clients.Options
  fullName: CG.Business.Clients.Options
  nameWithType: CG.Business.Clients.Options
- uid: CG.Business.Clients.Options.ClientOptions
  name: ClientOptions
  href: api/CG.Business.Clients.Options.ClientOptions.html
  commentId: T:CG.Business.Clients.Options.ClientOptions
  fullName: CG.Business.Clients.Options.ClientOptions
  nameWithType: ClientOptions
- uid: CG.Business.Directors
  name: CG.Business.Directors
  href: api/CG.Business.Directors.html
  commentId: N:CG.Business.Directors
  fullName: CG.Business.Directors
  nameWithType: CG.Business.Directors
- uid: CG.Business.Directors.DirectorBase
  name: DirectorBase
  href: api/CG.Business.Directors.DirectorBase.html
  commentId: T:CG.Business.Directors.DirectorBase
  fullName: CG.Business.Directors.DirectorBase
  nameWithType: DirectorBase
- uid: CG.Business.Directors.DirectorBase`1
  name: DirectorBase<TOptions>
  href: api/CG.Business.Directors.DirectorBase-1.html
  commentId: T:CG.Business.Directors.DirectorBase`1
  name.vb: DirectorBase(Of TOptions)
  fullName: CG.Business.Directors.DirectorBase<TOptions>
  fullName.vb: CG.Business.Directors.DirectorBase(Of TOptions)
  nameWithType: DirectorBase<TOptions>
  nameWithType.vb: DirectorBase(Of TOptions)
- uid: CG.Business.Directors.DirectorBase`1.#ctor(Microsoft.Extensions.Options.IOptions{`0})
  name: DirectorBase(IOptions<TOptions>)
  href: api/CG.Business.Directors.DirectorBase-1.html#CG_Business_Directors_DirectorBase_1__ctor_Microsoft_Extensions_Options_IOptions__0__
  commentId: M:CG.Business.Directors.DirectorBase`1.#ctor(Microsoft.Extensions.Options.IOptions{`0})
  name.vb: DirectorBase(IOptions(Of TOptions))
  fullName: CG.Business.Directors.DirectorBase<TOptions>.DirectorBase(Microsoft.Extensions.Options.IOptions<TOptions>)
  fullName.vb: CG.Business.Directors.DirectorBase(Of TOptions).DirectorBase(Microsoft.Extensions.Options.IOptions(Of TOptions))
  nameWithType: DirectorBase<TOptions>.DirectorBase(IOptions<TOptions>)
  nameWithType.vb: DirectorBase(Of TOptions).DirectorBase(IOptions(Of TOptions))
- uid: CG.Business.Directors.DirectorBase`1.#ctor*
  name: DirectorBase
  href: api/CG.Business.Directors.DirectorBase-1.html#CG_Business_Directors_DirectorBase_1__ctor_
  commentId: Overload:CG.Business.Directors.DirectorBase`1.#ctor
  isSpec: "True"
  fullName: CG.Business.Directors.DirectorBase<TOptions>.DirectorBase
  fullName.vb: CG.Business.Directors.DirectorBase(Of TOptions).DirectorBase
  nameWithType: DirectorBase<TOptions>.DirectorBase
  nameWithType.vb: DirectorBase(Of TOptions).DirectorBase
- uid: CG.Business.Directors.DirectorBase`1.Options
  name: Options
  href: api/CG.Business.Directors.DirectorBase-1.html#CG_Business_Directors_DirectorBase_1_Options
  commentId: P:CG.Business.Directors.DirectorBase`1.Options
  fullName: CG.Business.Directors.DirectorBase<TOptions>.Options
  fullName.vb: CG.Business.Directors.DirectorBase(Of TOptions).Options
  nameWithType: DirectorBase<TOptions>.Options
  nameWithType.vb: DirectorBase(Of TOptions).Options
- uid: CG.Business.Directors.DirectorBase`1.Options*
  name: Options
  href: api/CG.Business.Directors.DirectorBase-1.html#CG_Business_Directors_DirectorBase_1_Options_
  commentId: Overload:CG.Business.Directors.DirectorBase`1.Options
  isSpec: "True"
  fullName: CG.Business.Directors.DirectorBase<TOptions>.Options
  fullName.vb: CG.Business.Directors.DirectorBase(Of TOptions).Options
  nameWithType: DirectorBase<TOptions>.Options
  nameWithType.vb: DirectorBase(Of TOptions).Options
- uid: CG.Business.Directors.DirectorException
  name: DirectorException
  href: api/CG.Business.Directors.DirectorException.html
  commentId: T:CG.Business.Directors.DirectorException
  fullName: CG.Business.Directors.DirectorException
  nameWithType: DirectorException
- uid: CG.Business.Directors.DirectorException.#ctor
  name: DirectorException()
  href: api/CG.Business.Directors.DirectorException.html#CG_Business_Directors_DirectorException__ctor
  commentId: M:CG.Business.Directors.DirectorException.#ctor
  fullName: CG.Business.Directors.DirectorException.DirectorException()
  nameWithType: DirectorException.DirectorException()
- uid: CG.Business.Directors.DirectorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: DirectorException(SerializationInfo, StreamingContext)
  href: api/CG.Business.Directors.DirectorException.html#CG_Business_Directors_DirectorException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:CG.Business.Directors.DirectorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: CG.Business.Directors.DirectorException.DirectorException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: DirectorException.DirectorException(SerializationInfo, StreamingContext)
- uid: CG.Business.Directors.DirectorException.#ctor(System.String)
  name: DirectorException(String)
  href: api/CG.Business.Directors.DirectorException.html#CG_Business_Directors_DirectorException__ctor_System_String_
  commentId: M:CG.Business.Directors.DirectorException.#ctor(System.String)
  fullName: CG.Business.Directors.DirectorException.DirectorException(System.String)
  nameWithType: DirectorException.DirectorException(String)
- uid: CG.Business.Directors.DirectorException.#ctor(System.String,System.Exception)
  name: DirectorException(String, Exception)
  href: api/CG.Business.Directors.DirectorException.html#CG_Business_Directors_DirectorException__ctor_System_String_System_Exception_
  commentId: M:CG.Business.Directors.DirectorException.#ctor(System.String,System.Exception)
  fullName: CG.Business.Directors.DirectorException.DirectorException(System.String, System.Exception)
  nameWithType: DirectorException.DirectorException(String, Exception)
- uid: CG.Business.Directors.DirectorException.#ctor*
  name: DirectorException
  href: api/CG.Business.Directors.DirectorException.html#CG_Business_Directors_DirectorException__ctor_
  commentId: Overload:CG.Business.Directors.DirectorException.#ctor
  isSpec: "True"
  fullName: CG.Business.Directors.DirectorException.DirectorException
  nameWithType: DirectorException.DirectorException
- uid: CG.Business.Directors.IDirector
  name: IDirector
  href: api/CG.Business.Directors.IDirector.html
  commentId: T:CG.Business.Directors.IDirector
  fullName: CG.Business.Directors.IDirector
  nameWithType: IDirector
- uid: CG.Business.Directors.Options
  name: CG.Business.Directors.Options
  href: api/CG.Business.Directors.Options.html
  commentId: N:CG.Business.Directors.Options
  fullName: CG.Business.Directors.Options
  nameWithType: CG.Business.Directors.Options
- uid: CG.Business.Directors.Options.DirectorOptions
  name: DirectorOptions
  href: api/CG.Business.Directors.Options.DirectorOptions.html
  commentId: T:CG.Business.Directors.Options.DirectorOptions
  fullName: CG.Business.Directors.Options.DirectorOptions
  nameWithType: DirectorOptions
- uid: CG.Business.Managers
  name: CG.Business.Managers
  href: api/CG.Business.Managers.html
  commentId: N:CG.Business.Managers
  fullName: CG.Business.Managers
  nameWithType: CG.Business.Managers
- uid: CG.Business.Managers.IManager
  name: IManager
  href: api/CG.Business.Managers.IManager.html
  commentId: T:CG.Business.Managers.IManager
  fullName: CG.Business.Managers.IManager
  nameWithType: IManager
- uid: CG.Business.Managers.ManagerBase
  name: ManagerBase
  href: api/CG.Business.Managers.ManagerBase.html
  commentId: T:CG.Business.Managers.ManagerBase
  fullName: CG.Business.Managers.ManagerBase
  nameWithType: ManagerBase
- uid: CG.Business.Managers.ManagerBase`1
  name: ManagerBase<TOptions>
  href: api/CG.Business.Managers.ManagerBase-1.html
  commentId: T:CG.Business.Managers.ManagerBase`1
  name.vb: ManagerBase(Of TOptions)
  fullName: CG.Business.Managers.ManagerBase<TOptions>
  fullName.vb: CG.Business.Managers.ManagerBase(Of TOptions)
  nameWithType: ManagerBase<TOptions>
  nameWithType.vb: ManagerBase(Of TOptions)
- uid: CG.Business.Managers.ManagerBase`1.#ctor(Microsoft.Extensions.Options.IOptions{`0})
  name: ManagerBase(IOptions<TOptions>)
  href: api/CG.Business.Managers.ManagerBase-1.html#CG_Business_Managers_ManagerBase_1__ctor_Microsoft_Extensions_Options_IOptions__0__
  commentId: M:CG.Business.Managers.ManagerBase`1.#ctor(Microsoft.Extensions.Options.IOptions{`0})
  name.vb: ManagerBase(IOptions(Of TOptions))
  fullName: CG.Business.Managers.ManagerBase<TOptions>.ManagerBase(Microsoft.Extensions.Options.IOptions<TOptions>)
  fullName.vb: CG.Business.Managers.ManagerBase(Of TOptions).ManagerBase(Microsoft.Extensions.Options.IOptions(Of TOptions))
  nameWithType: ManagerBase<TOptions>.ManagerBase(IOptions<TOptions>)
  nameWithType.vb: ManagerBase(Of TOptions).ManagerBase(IOptions(Of TOptions))
- uid: CG.Business.Managers.ManagerBase`1.#ctor*
  name: ManagerBase
  href: api/CG.Business.Managers.ManagerBase-1.html#CG_Business_Managers_ManagerBase_1__ctor_
  commentId: Overload:CG.Business.Managers.ManagerBase`1.#ctor
  isSpec: "True"
  fullName: CG.Business.Managers.ManagerBase<TOptions>.ManagerBase
  fullName.vb: CG.Business.Managers.ManagerBase(Of TOptions).ManagerBase
  nameWithType: ManagerBase<TOptions>.ManagerBase
  nameWithType.vb: ManagerBase(Of TOptions).ManagerBase
- uid: CG.Business.Managers.ManagerBase`1.Options
  name: Options
  href: api/CG.Business.Managers.ManagerBase-1.html#CG_Business_Managers_ManagerBase_1_Options
  commentId: P:CG.Business.Managers.ManagerBase`1.Options
  fullName: CG.Business.Managers.ManagerBase<TOptions>.Options
  fullName.vb: CG.Business.Managers.ManagerBase(Of TOptions).Options
  nameWithType: ManagerBase<TOptions>.Options
  nameWithType.vb: ManagerBase(Of TOptions).Options
- uid: CG.Business.Managers.ManagerBase`1.Options*
  name: Options
  href: api/CG.Business.Managers.ManagerBase-1.html#CG_Business_Managers_ManagerBase_1_Options_
  commentId: Overload:CG.Business.Managers.ManagerBase`1.Options
  isSpec: "True"
  fullName: CG.Business.Managers.ManagerBase<TOptions>.Options
  fullName.vb: CG.Business.Managers.ManagerBase(Of TOptions).Options
  nameWithType: ManagerBase<TOptions>.Options
  nameWithType.vb: ManagerBase(Of TOptions).Options
- uid: CG.Business.Managers.ManagerException
  name: ManagerException
  href: api/CG.Business.Managers.ManagerException.html
  commentId: T:CG.Business.Managers.ManagerException
  fullName: CG.Business.Managers.ManagerException
  nameWithType: ManagerException
- uid: CG.Business.Managers.ManagerException.#ctor
  name: ManagerException()
  href: api/CG.Business.Managers.ManagerException.html#CG_Business_Managers_ManagerException__ctor
  commentId: M:CG.Business.Managers.ManagerException.#ctor
  fullName: CG.Business.Managers.ManagerException.ManagerException()
  nameWithType: ManagerException.ManagerException()
- uid: CG.Business.Managers.ManagerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: ManagerException(SerializationInfo, StreamingContext)
  href: api/CG.Business.Managers.ManagerException.html#CG_Business_Managers_ManagerException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:CG.Business.Managers.ManagerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: CG.Business.Managers.ManagerException.ManagerException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: ManagerException.ManagerException(SerializationInfo, StreamingContext)
- uid: CG.Business.Managers.ManagerException.#ctor(System.String)
  name: ManagerException(String)
  href: api/CG.Business.Managers.ManagerException.html#CG_Business_Managers_ManagerException__ctor_System_String_
  commentId: M:CG.Business.Managers.ManagerException.#ctor(System.String)
  fullName: CG.Business.Managers.ManagerException.ManagerException(System.String)
  nameWithType: ManagerException.ManagerException(String)
- uid: CG.Business.Managers.ManagerException.#ctor(System.String,System.Exception)
  name: ManagerException(String, Exception)
  href: api/CG.Business.Managers.ManagerException.html#CG_Business_Managers_ManagerException__ctor_System_String_System_Exception_
  commentId: M:CG.Business.Managers.ManagerException.#ctor(System.String,System.Exception)
  fullName: CG.Business.Managers.ManagerException.ManagerException(System.String, System.Exception)
  nameWithType: ManagerException.ManagerException(String, Exception)
- uid: CG.Business.Managers.ManagerException.#ctor*
  name: ManagerException
  href: api/CG.Business.Managers.ManagerException.html#CG_Business_Managers_ManagerException__ctor_
  commentId: Overload:CG.Business.Managers.ManagerException.#ctor
  isSpec: "True"
  fullName: CG.Business.Managers.ManagerException.ManagerException
  nameWithType: ManagerException.ManagerException
- uid: CG.Business.Managers.Options
  name: CG.Business.Managers.Options
  href: api/CG.Business.Managers.Options.html
  commentId: N:CG.Business.Managers.Options
  fullName: CG.Business.Managers.Options
  nameWithType: CG.Business.Managers.Options
- uid: CG.Business.Managers.Options.ManagerOptions
  name: ManagerOptions
  href: api/CG.Business.Managers.Options.ManagerOptions.html
  commentId: T:CG.Business.Managers.Options.ManagerOptions
  fullName: CG.Business.Managers.Options.ManagerOptions
  nameWithType: ManagerOptions
- uid: CG.Business.Models
  name: CG.Business.Models
  href: api/CG.Business.Models.html
  commentId: N:CG.Business.Models
  fullName: CG.Business.Models
  nameWithType: CG.Business.Models
- uid: CG.Business.Models.AuditedModelBase
  name: AuditedModelBase
  href: api/CG.Business.Models.AuditedModelBase.html
  commentId: T:CG.Business.Models.AuditedModelBase
  fullName: CG.Business.Models.AuditedModelBase
  nameWithType: AuditedModelBase
- uid: CG.Business.Models.AuditedModelBase.CreatedBy
  name: CreatedBy
  href: api/CG.Business.Models.AuditedModelBase.html#CG_Business_Models_AuditedModelBase_CreatedBy
  commentId: P:CG.Business.Models.AuditedModelBase.CreatedBy
  fullName: CG.Business.Models.AuditedModelBase.CreatedBy
  nameWithType: AuditedModelBase.CreatedBy
- uid: CG.Business.Models.AuditedModelBase.CreatedBy*
  name: CreatedBy
  href: api/CG.Business.Models.AuditedModelBase.html#CG_Business_Models_AuditedModelBase_CreatedBy_
  commentId: Overload:CG.Business.Models.AuditedModelBase.CreatedBy
  isSpec: "True"
  fullName: CG.Business.Models.AuditedModelBase.CreatedBy
  nameWithType: AuditedModelBase.CreatedBy
- uid: CG.Business.Models.AuditedModelBase.CreatedDate
  name: CreatedDate
  href: api/CG.Business.Models.AuditedModelBase.html#CG_Business_Models_AuditedModelBase_CreatedDate
  commentId: P:CG.Business.Models.AuditedModelBase.CreatedDate
  fullName: CG.Business.Models.AuditedModelBase.CreatedDate
  nameWithType: AuditedModelBase.CreatedDate
- uid: CG.Business.Models.AuditedModelBase.CreatedDate*
  name: CreatedDate
  href: api/CG.Business.Models.AuditedModelBase.html#CG_Business_Models_AuditedModelBase_CreatedDate_
  commentId: Overload:CG.Business.Models.AuditedModelBase.CreatedDate
  isSpec: "True"
  fullName: CG.Business.Models.AuditedModelBase.CreatedDate
  nameWithType: AuditedModelBase.CreatedDate
- uid: CG.Business.Models.AuditedModelBase.UpdatedBy
  name: UpdatedBy
  href: api/CG.Business.Models.AuditedModelBase.html#CG_Business_Models_AuditedModelBase_UpdatedBy
  commentId: P:CG.Business.Models.AuditedModelBase.UpdatedBy
  fullName: CG.Business.Models.AuditedModelBase.UpdatedBy
  nameWithType: AuditedModelBase.UpdatedBy
- uid: CG.Business.Models.AuditedModelBase.UpdatedBy*
  name: UpdatedBy
  href: api/CG.Business.Models.AuditedModelBase.html#CG_Business_Models_AuditedModelBase_UpdatedBy_
  commentId: Overload:CG.Business.Models.AuditedModelBase.UpdatedBy
  isSpec: "True"
  fullName: CG.Business.Models.AuditedModelBase.UpdatedBy
  nameWithType: AuditedModelBase.UpdatedBy
- uid: CG.Business.Models.AuditedModelBase.UpdatedDate
  name: UpdatedDate
  href: api/CG.Business.Models.AuditedModelBase.html#CG_Business_Models_AuditedModelBase_UpdatedDate
  commentId: P:CG.Business.Models.AuditedModelBase.UpdatedDate
  fullName: CG.Business.Models.AuditedModelBase.UpdatedDate
  nameWithType: AuditedModelBase.UpdatedDate
- uid: CG.Business.Models.AuditedModelBase.UpdatedDate*
  name: UpdatedDate
  href: api/CG.Business.Models.AuditedModelBase.html#CG_Business_Models_AuditedModelBase_UpdatedDate_
  commentId: Overload:CG.Business.Models.AuditedModelBase.UpdatedDate
  isSpec: "True"
  fullName: CG.Business.Models.AuditedModelBase.UpdatedDate
  nameWithType: AuditedModelBase.UpdatedDate
- uid: CG.Business.Models.IAuditedModel
  name: IAuditedModel
  href: api/CG.Business.Models.IAuditedModel.html
  commentId: T:CG.Business.Models.IAuditedModel
  fullName: CG.Business.Models.IAuditedModel
  nameWithType: IAuditedModel
- uid: CG.Business.Models.IAuditedModel.CreatedBy
  name: CreatedBy
  href: api/CG.Business.Models.IAuditedModel.html#CG_Business_Models_IAuditedModel_CreatedBy
  commentId: P:CG.Business.Models.IAuditedModel.CreatedBy
  fullName: CG.Business.Models.IAuditedModel.CreatedBy
  nameWithType: IAuditedModel.CreatedBy
- uid: CG.Business.Models.IAuditedModel.CreatedBy*
  name: CreatedBy
  href: api/CG.Business.Models.IAuditedModel.html#CG_Business_Models_IAuditedModel_CreatedBy_
  commentId: Overload:CG.Business.Models.IAuditedModel.CreatedBy
  isSpec: "True"
  fullName: CG.Business.Models.IAuditedModel.CreatedBy
  nameWithType: IAuditedModel.CreatedBy
- uid: CG.Business.Models.IAuditedModel.CreatedDate
  name: CreatedDate
  href: api/CG.Business.Models.IAuditedModel.html#CG_Business_Models_IAuditedModel_CreatedDate
  commentId: P:CG.Business.Models.IAuditedModel.CreatedDate
  fullName: CG.Business.Models.IAuditedModel.CreatedDate
  nameWithType: IAuditedModel.CreatedDate
- uid: CG.Business.Models.IAuditedModel.CreatedDate*
  name: CreatedDate
  href: api/CG.Business.Models.IAuditedModel.html#CG_Business_Models_IAuditedModel_CreatedDate_
  commentId: Overload:CG.Business.Models.IAuditedModel.CreatedDate
  isSpec: "True"
  fullName: CG.Business.Models.IAuditedModel.CreatedDate
  nameWithType: IAuditedModel.CreatedDate
- uid: CG.Business.Models.IAuditedModel.UpdatedBy
  name: UpdatedBy
  href: api/CG.Business.Models.IAuditedModel.html#CG_Business_Models_IAuditedModel_UpdatedBy
  commentId: P:CG.Business.Models.IAuditedModel.UpdatedBy
  fullName: CG.Business.Models.IAuditedModel.UpdatedBy
  nameWithType: IAuditedModel.UpdatedBy
- uid: CG.Business.Models.IAuditedModel.UpdatedBy*
  name: UpdatedBy
  href: api/CG.Business.Models.IAuditedModel.html#CG_Business_Models_IAuditedModel_UpdatedBy_
  commentId: Overload:CG.Business.Models.IAuditedModel.UpdatedBy
  isSpec: "True"
  fullName: CG.Business.Models.IAuditedModel.UpdatedBy
  nameWithType: IAuditedModel.UpdatedBy
- uid: CG.Business.Models.IAuditedModel.UpdatedDate
  name: UpdatedDate
  href: api/CG.Business.Models.IAuditedModel.html#CG_Business_Models_IAuditedModel_UpdatedDate
  commentId: P:CG.Business.Models.IAuditedModel.UpdatedDate
  fullName: CG.Business.Models.IAuditedModel.UpdatedDate
  nameWithType: IAuditedModel.UpdatedDate
- uid: CG.Business.Models.IAuditedModel.UpdatedDate*
  name: UpdatedDate
  href: api/CG.Business.Models.IAuditedModel.html#CG_Business_Models_IAuditedModel_UpdatedDate_
  commentId: Overload:CG.Business.Models.IAuditedModel.UpdatedDate
  isSpec: "True"
  fullName: CG.Business.Models.IAuditedModel.UpdatedDate
  nameWithType: IAuditedModel.UpdatedDate
- uid: CG.Business.Models.IModel
  name: IModel
  href: api/CG.Business.Models.IModel.html
  commentId: T:CG.Business.Models.IModel
  fullName: CG.Business.Models.IModel
  nameWithType: IModel
- uid: CG.Business.Models.IModel`1
  name: IModel<TKey>
  href: api/CG.Business.Models.IModel-1.html
  commentId: T:CG.Business.Models.IModel`1
  name.vb: IModel(Of TKey)
  fullName: CG.Business.Models.IModel<TKey>
  fullName.vb: CG.Business.Models.IModel(Of TKey)
  nameWithType: IModel<TKey>
  nameWithType.vb: IModel(Of TKey)
- uid: CG.Business.Models.IModel`1.Key
  name: Key
  href: api/CG.Business.Models.IModel-1.html#CG_Business_Models_IModel_1_Key
  commentId: P:CG.Business.Models.IModel`1.Key
  fullName: CG.Business.Models.IModel<TKey>.Key
  fullName.vb: CG.Business.Models.IModel(Of TKey).Key
  nameWithType: IModel<TKey>.Key
  nameWithType.vb: IModel(Of TKey).Key
- uid: CG.Business.Models.IModel`1.Key*
  name: Key
  href: api/CG.Business.Models.IModel-1.html#CG_Business_Models_IModel_1_Key_
  commentId: Overload:CG.Business.Models.IModel`1.Key
  isSpec: "True"
  fullName: CG.Business.Models.IModel<TKey>.Key
  fullName.vb: CG.Business.Models.IModel(Of TKey).Key
  nameWithType: IModel<TKey>.Key
  nameWithType.vb: IModel(Of TKey).Key
- uid: CG.Business.Models.IModel`2
  name: IModel<TKey1, TKey2>
  href: api/CG.Business.Models.IModel-2.html
  commentId: T:CG.Business.Models.IModel`2
  name.vb: IModel(Of TKey1, TKey2)
  fullName: CG.Business.Models.IModel<TKey1, TKey2>
  fullName.vb: CG.Business.Models.IModel(Of TKey1, TKey2)
  nameWithType: IModel<TKey1, TKey2>
  nameWithType.vb: IModel(Of TKey1, TKey2)
- uid: CG.Business.Models.IModel`2.Key1
  name: Key1
  href: api/CG.Business.Models.IModel-2.html#CG_Business_Models_IModel_2_Key1
  commentId: P:CG.Business.Models.IModel`2.Key1
  fullName: CG.Business.Models.IModel<TKey1, TKey2>.Key1
  fullName.vb: CG.Business.Models.IModel(Of TKey1, TKey2).Key1
  nameWithType: IModel<TKey1, TKey2>.Key1
  nameWithType.vb: IModel(Of TKey1, TKey2).Key1
- uid: CG.Business.Models.IModel`2.Key1*
  name: Key1
  href: api/CG.Business.Models.IModel-2.html#CG_Business_Models_IModel_2_Key1_
  commentId: Overload:CG.Business.Models.IModel`2.Key1
  isSpec: "True"
  fullName: CG.Business.Models.IModel<TKey1, TKey2>.Key1
  fullName.vb: CG.Business.Models.IModel(Of TKey1, TKey2).Key1
  nameWithType: IModel<TKey1, TKey2>.Key1
  nameWithType.vb: IModel(Of TKey1, TKey2).Key1
- uid: CG.Business.Models.IModel`2.Key2
  name: Key2
  href: api/CG.Business.Models.IModel-2.html#CG_Business_Models_IModel_2_Key2
  commentId: P:CG.Business.Models.IModel`2.Key2
  fullName: CG.Business.Models.IModel<TKey1, TKey2>.Key2
  fullName.vb: CG.Business.Models.IModel(Of TKey1, TKey2).Key2
  nameWithType: IModel<TKey1, TKey2>.Key2
  nameWithType.vb: IModel(Of TKey1, TKey2).Key2
- uid: CG.Business.Models.IModel`2.Key2*
  name: Key2
  href: api/CG.Business.Models.IModel-2.html#CG_Business_Models_IModel_2_Key2_
  commentId: Overload:CG.Business.Models.IModel`2.Key2
  isSpec: "True"
  fullName: CG.Business.Models.IModel<TKey1, TKey2>.Key2
  fullName.vb: CG.Business.Models.IModel(Of TKey1, TKey2).Key2
  nameWithType: IModel<TKey1, TKey2>.Key2
  nameWithType.vb: IModel(Of TKey1, TKey2).Key2
- uid: CG.Business.Models.IModel`3
  name: IModel<TKey1, TKey2, TKey3>
  href: api/CG.Business.Models.IModel-3.html
  commentId: T:CG.Business.Models.IModel`3
  name.vb: IModel(Of TKey1, TKey2, TKey3)
  fullName: CG.Business.Models.IModel<TKey1, TKey2, TKey3>
  fullName.vb: CG.Business.Models.IModel(Of TKey1, TKey2, TKey3)
  nameWithType: IModel<TKey1, TKey2, TKey3>
  nameWithType.vb: IModel(Of TKey1, TKey2, TKey3)
- uid: CG.Business.Models.IModel`3.Key1
  name: Key1
  href: api/CG.Business.Models.IModel-3.html#CG_Business_Models_IModel_3_Key1
  commentId: P:CG.Business.Models.IModel`3.Key1
  fullName: CG.Business.Models.IModel<TKey1, TKey2, TKey3>.Key1
  fullName.vb: CG.Business.Models.IModel(Of TKey1, TKey2, TKey3).Key1
  nameWithType: IModel<TKey1, TKey2, TKey3>.Key1
  nameWithType.vb: IModel(Of TKey1, TKey2, TKey3).Key1
- uid: CG.Business.Models.IModel`3.Key1*
  name: Key1
  href: api/CG.Business.Models.IModel-3.html#CG_Business_Models_IModel_3_Key1_
  commentId: Overload:CG.Business.Models.IModel`3.Key1
  isSpec: "True"
  fullName: CG.Business.Models.IModel<TKey1, TKey2, TKey3>.Key1
  fullName.vb: CG.Business.Models.IModel(Of TKey1, TKey2, TKey3).Key1
  nameWithType: IModel<TKey1, TKey2, TKey3>.Key1
  nameWithType.vb: IModel(Of TKey1, TKey2, TKey3).Key1
- uid: CG.Business.Models.IModel`3.Key2
  name: Key2
  href: api/CG.Business.Models.IModel-3.html#CG_Business_Models_IModel_3_Key2
  commentId: P:CG.Business.Models.IModel`3.Key2
  fullName: CG.Business.Models.IModel<TKey1, TKey2, TKey3>.Key2
  fullName.vb: CG.Business.Models.IModel(Of TKey1, TKey2, TKey3).Key2
  nameWithType: IModel<TKey1, TKey2, TKey3>.Key2
  nameWithType.vb: IModel(Of TKey1, TKey2, TKey3).Key2
- uid: CG.Business.Models.IModel`3.Key2*
  name: Key2
  href: api/CG.Business.Models.IModel-3.html#CG_Business_Models_IModel_3_Key2_
  commentId: Overload:CG.Business.Models.IModel`3.Key2
  isSpec: "True"
  fullName: CG.Business.Models.IModel<TKey1, TKey2, TKey3>.Key2
  fullName.vb: CG.Business.Models.IModel(Of TKey1, TKey2, TKey3).Key2
  nameWithType: IModel<TKey1, TKey2, TKey3>.Key2
  nameWithType.vb: IModel(Of TKey1, TKey2, TKey3).Key2
- uid: CG.Business.Models.IModel`3.Key3
  name: Key3
  href: api/CG.Business.Models.IModel-3.html#CG_Business_Models_IModel_3_Key3
  commentId: P:CG.Business.Models.IModel`3.Key3
  fullName: CG.Business.Models.IModel<TKey1, TKey2, TKey3>.Key3
  fullName.vb: CG.Business.Models.IModel(Of TKey1, TKey2, TKey3).Key3
  nameWithType: IModel<TKey1, TKey2, TKey3>.Key3
  nameWithType.vb: IModel(Of TKey1, TKey2, TKey3).Key3
- uid: CG.Business.Models.IModel`3.Key3*
  name: Key3
  href: api/CG.Business.Models.IModel-3.html#CG_Business_Models_IModel_3_Key3_
  commentId: Overload:CG.Business.Models.IModel`3.Key3
  isSpec: "True"
  fullName: CG.Business.Models.IModel<TKey1, TKey2, TKey3>.Key3
  fullName.vb: CG.Business.Models.IModel(Of TKey1, TKey2, TKey3).Key3
  nameWithType: IModel<TKey1, TKey2, TKey3>.Key3
  nameWithType.vb: IModel(Of TKey1, TKey2, TKey3).Key3
- uid: CG.Business.Models.ModelBase
  name: ModelBase
  href: api/CG.Business.Models.ModelBase.html
  commentId: T:CG.Business.Models.ModelBase
  fullName: CG.Business.Models.ModelBase
  nameWithType: ModelBase
- uid: CG.Business.Models.ModelBase`1
  name: ModelBase<TKey>
  href: api/CG.Business.Models.ModelBase-1.html
  commentId: T:CG.Business.Models.ModelBase`1
  name.vb: ModelBase(Of TKey)
  fullName: CG.Business.Models.ModelBase<TKey>
  fullName.vb: CG.Business.Models.ModelBase(Of TKey)
  nameWithType: ModelBase<TKey>
  nameWithType.vb: ModelBase(Of TKey)
- uid: CG.Business.Models.ModelBase`1.Equals(System.Object)
  name: Equals(Object)
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_Equals_System_Object_
  commentId: M:CG.Business.Models.ModelBase`1.Equals(System.Object)
  fullName: CG.Business.Models.ModelBase<TKey>.Equals(System.Object)
  fullName.vb: CG.Business.Models.ModelBase(Of TKey).Equals(System.Object)
  nameWithType: ModelBase<TKey>.Equals(Object)
  nameWithType.vb: ModelBase(Of TKey).Equals(Object)
- uid: CG.Business.Models.ModelBase`1.Equals*
  name: Equals
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_Equals_
  commentId: Overload:CG.Business.Models.ModelBase`1.Equals
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey>.Equals
  fullName.vb: CG.Business.Models.ModelBase(Of TKey).Equals
  nameWithType: ModelBase<TKey>.Equals
  nameWithType.vb: ModelBase(Of TKey).Equals
- uid: CG.Business.Models.ModelBase`1.GetHashCode
  name: GetHashCode()
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_GetHashCode
  commentId: M:CG.Business.Models.ModelBase`1.GetHashCode
  fullName: CG.Business.Models.ModelBase<TKey>.GetHashCode()
  fullName.vb: CG.Business.Models.ModelBase(Of TKey).GetHashCode()
  nameWithType: ModelBase<TKey>.GetHashCode()
  nameWithType.vb: ModelBase(Of TKey).GetHashCode()
- uid: CG.Business.Models.ModelBase`1.GetHashCode*
  name: GetHashCode
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_GetHashCode_
  commentId: Overload:CG.Business.Models.ModelBase`1.GetHashCode
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey>.GetHashCode
  fullName.vb: CG.Business.Models.ModelBase(Of TKey).GetHashCode
  nameWithType: ModelBase<TKey>.GetHashCode
  nameWithType.vb: ModelBase(Of TKey).GetHashCode
- uid: CG.Business.Models.ModelBase`1.Key
  name: Key
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_Key
  commentId: P:CG.Business.Models.ModelBase`1.Key
  fullName: CG.Business.Models.ModelBase<TKey>.Key
  fullName.vb: CG.Business.Models.ModelBase(Of TKey).Key
  nameWithType: ModelBase<TKey>.Key
  nameWithType.vb: ModelBase(Of TKey).Key
- uid: CG.Business.Models.ModelBase`1.Key*
  name: Key
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_Key_
  commentId: Overload:CG.Business.Models.ModelBase`1.Key
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey>.Key
  fullName.vb: CG.Business.Models.ModelBase(Of TKey).Key
  nameWithType: ModelBase<TKey>.Key
  nameWithType.vb: ModelBase(Of TKey).Key
- uid: CG.Business.Models.ModelBase`1.ToString
  name: ToString()
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_ToString
  commentId: M:CG.Business.Models.ModelBase`1.ToString
  fullName: CG.Business.Models.ModelBase<TKey>.ToString()
  fullName.vb: CG.Business.Models.ModelBase(Of TKey).ToString()
  nameWithType: ModelBase<TKey>.ToString()
  nameWithType.vb: ModelBase(Of TKey).ToString()
- uid: CG.Business.Models.ModelBase`1.ToString*
  name: ToString
  href: api/CG.Business.Models.ModelBase-1.html#CG_Business_Models_ModelBase_1_ToString_
  commentId: Overload:CG.Business.Models.ModelBase`1.ToString
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey>.ToString
  fullName.vb: CG.Business.Models.ModelBase(Of TKey).ToString
  nameWithType: ModelBase<TKey>.ToString
  nameWithType.vb: ModelBase(Of TKey).ToString
- uid: CG.Business.Models.ModelBase`2
  name: ModelBase<TKey1, TKey2>
  href: api/CG.Business.Models.ModelBase-2.html
  commentId: T:CG.Business.Models.ModelBase`2
  name.vb: ModelBase(Of TKey1, TKey2)
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2>
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2)
  nameWithType: ModelBase<TKey1, TKey2>
  nameWithType.vb: ModelBase(Of TKey1, TKey2)
- uid: CG.Business.Models.ModelBase`2.Equals(System.Object)
  name: Equals(Object)
  href: api/CG.Business.Models.ModelBase-2.html#CG_Business_Models_ModelBase_2_Equals_System_Object_
  commentId: M:CG.Business.Models.ModelBase`2.Equals(System.Object)
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2>.Equals(System.Object)
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2).Equals(System.Object)
  nameWithType: ModelBase<TKey1, TKey2>.Equals(Object)
  nameWithType.vb: ModelBase(Of TKey1, TKey2).Equals(Object)
- uid: CG.Business.Models.ModelBase`2.Equals*
  name: Equals
  href: api/CG.Business.Models.ModelBase-2.html#CG_Business_Models_ModelBase_2_Equals_
  commentId: Overload:CG.Business.Models.ModelBase`2.Equals
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2>.Equals
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2).Equals
  nameWithType: ModelBase<TKey1, TKey2>.Equals
  nameWithType.vb: ModelBase(Of TKey1, TKey2).Equals
- uid: CG.Business.Models.ModelBase`2.GetHashCode
  name: GetHashCode()
  href: api/CG.Business.Models.ModelBase-2.html#CG_Business_Models_ModelBase_2_GetHashCode
  commentId: M:CG.Business.Models.ModelBase`2.GetHashCode
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2>.GetHashCode()
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2).GetHashCode()
  nameWithType: ModelBase<TKey1, TKey2>.GetHashCode()
  nameWithType.vb: ModelBase(Of TKey1, TKey2).GetHashCode()
- uid: CG.Business.Models.ModelBase`2.GetHashCode*
  name: GetHashCode
  href: api/CG.Business.Models.ModelBase-2.html#CG_Business_Models_ModelBase_2_GetHashCode_
  commentId: Overload:CG.Business.Models.ModelBase`2.GetHashCode
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2>.GetHashCode
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2).GetHashCode
  nameWithType: ModelBase<TKey1, TKey2>.GetHashCode
  nameWithType.vb: ModelBase(Of TKey1, TKey2).GetHashCode
- uid: CG.Business.Models.ModelBase`2.Key1
  name: Key1
  href: api/CG.Business.Models.ModelBase-2.html#CG_Business_Models_ModelBase_2_Key1
  commentId: P:CG.Business.Models.ModelBase`2.Key1
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2>.Key1
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2).Key1
  nameWithType: ModelBase<TKey1, TKey2>.Key1
  nameWithType.vb: ModelBase(Of TKey1, TKey2).Key1
- uid: CG.Business.Models.ModelBase`2.Key1*
  name: Key1
  href: api/CG.Business.Models.ModelBase-2.html#CG_Business_Models_ModelBase_2_Key1_
  commentId: Overload:CG.Business.Models.ModelBase`2.Key1
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2>.Key1
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2).Key1
  nameWithType: ModelBase<TKey1, TKey2>.Key1
  nameWithType.vb: ModelBase(Of TKey1, TKey2).Key1
- uid: CG.Business.Models.ModelBase`2.Key2
  name: Key2
  href: api/CG.Business.Models.ModelBase-2.html#CG_Business_Models_ModelBase_2_Key2
  commentId: P:CG.Business.Models.ModelBase`2.Key2
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2>.Key2
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2).Key2
  nameWithType: ModelBase<TKey1, TKey2>.Key2
  nameWithType.vb: ModelBase(Of TKey1, TKey2).Key2
- uid: CG.Business.Models.ModelBase`2.Key2*
  name: Key2
  href: api/CG.Business.Models.ModelBase-2.html#CG_Business_Models_ModelBase_2_Key2_
  commentId: Overload:CG.Business.Models.ModelBase`2.Key2
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2>.Key2
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2).Key2
  nameWithType: ModelBase<TKey1, TKey2>.Key2
  nameWithType.vb: ModelBase(Of TKey1, TKey2).Key2
- uid: CG.Business.Models.ModelBase`2.ToString
  name: ToString()
  href: api/CG.Business.Models.ModelBase-2.html#CG_Business_Models_ModelBase_2_ToString
  commentId: M:CG.Business.Models.ModelBase`2.ToString
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2>.ToString()
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2).ToString()
  nameWithType: ModelBase<TKey1, TKey2>.ToString()
  nameWithType.vb: ModelBase(Of TKey1, TKey2).ToString()
- uid: CG.Business.Models.ModelBase`2.ToString*
  name: ToString
  href: api/CG.Business.Models.ModelBase-2.html#CG_Business_Models_ModelBase_2_ToString_
  commentId: Overload:CG.Business.Models.ModelBase`2.ToString
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2>.ToString
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2).ToString
  nameWithType: ModelBase<TKey1, TKey2>.ToString
  nameWithType.vb: ModelBase(Of TKey1, TKey2).ToString
- uid: CG.Business.Models.ModelBase`3
  name: ModelBase<TKey1, TKey2, TKey3>
  href: api/CG.Business.Models.ModelBase-3.html
  commentId: T:CG.Business.Models.ModelBase`3
  name.vb: ModelBase(Of TKey1, TKey2, TKey3)
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2, TKey3>
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2, TKey3)
  nameWithType: ModelBase<TKey1, TKey2, TKey3>
  nameWithType.vb: ModelBase(Of TKey1, TKey2, TKey3)
- uid: CG.Business.Models.ModelBase`3.Equals(System.Object)
  name: Equals(Object)
  href: api/CG.Business.Models.ModelBase-3.html#CG_Business_Models_ModelBase_3_Equals_System_Object_
  commentId: M:CG.Business.Models.ModelBase`3.Equals(System.Object)
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2, TKey3>.Equals(System.Object)
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2, TKey3).Equals(System.Object)
  nameWithType: ModelBase<TKey1, TKey2, TKey3>.Equals(Object)
  nameWithType.vb: ModelBase(Of TKey1, TKey2, TKey3).Equals(Object)
- uid: CG.Business.Models.ModelBase`3.Equals*
  name: Equals
  href: api/CG.Business.Models.ModelBase-3.html#CG_Business_Models_ModelBase_3_Equals_
  commentId: Overload:CG.Business.Models.ModelBase`3.Equals
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2, TKey3>.Equals
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2, TKey3).Equals
  nameWithType: ModelBase<TKey1, TKey2, TKey3>.Equals
  nameWithType.vb: ModelBase(Of TKey1, TKey2, TKey3).Equals
- uid: CG.Business.Models.ModelBase`3.GetHashCode
  name: GetHashCode()
  href: api/CG.Business.Models.ModelBase-3.html#CG_Business_Models_ModelBase_3_GetHashCode
  commentId: M:CG.Business.Models.ModelBase`3.GetHashCode
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2, TKey3>.GetHashCode()
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2, TKey3).GetHashCode()
  nameWithType: ModelBase<TKey1, TKey2, TKey3>.GetHashCode()
  nameWithType.vb: ModelBase(Of TKey1, TKey2, TKey3).GetHashCode()
- uid: CG.Business.Models.ModelBase`3.GetHashCode*
  name: GetHashCode
  href: api/CG.Business.Models.ModelBase-3.html#CG_Business_Models_ModelBase_3_GetHashCode_
  commentId: Overload:CG.Business.Models.ModelBase`3.GetHashCode
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2, TKey3>.GetHashCode
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2, TKey3).GetHashCode
  nameWithType: ModelBase<TKey1, TKey2, TKey3>.GetHashCode
  nameWithType.vb: ModelBase(Of TKey1, TKey2, TKey3).GetHashCode
- uid: CG.Business.Models.ModelBase`3.Key1
  name: Key1
  href: api/CG.Business.Models.ModelBase-3.html#CG_Business_Models_ModelBase_3_Key1
  commentId: P:CG.Business.Models.ModelBase`3.Key1
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2, TKey3>.Key1
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2, TKey3).Key1
  nameWithType: ModelBase<TKey1, TKey2, TKey3>.Key1
  nameWithType.vb: ModelBase(Of TKey1, TKey2, TKey3).Key1
- uid: CG.Business.Models.ModelBase`3.Key1*
  name: Key1
  href: api/CG.Business.Models.ModelBase-3.html#CG_Business_Models_ModelBase_3_Key1_
  commentId: Overload:CG.Business.Models.ModelBase`3.Key1
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2, TKey3>.Key1
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2, TKey3).Key1
  nameWithType: ModelBase<TKey1, TKey2, TKey3>.Key1
  nameWithType.vb: ModelBase(Of TKey1, TKey2, TKey3).Key1
- uid: CG.Business.Models.ModelBase`3.Key2
  name: Key2
  href: api/CG.Business.Models.ModelBase-3.html#CG_Business_Models_ModelBase_3_Key2
  commentId: P:CG.Business.Models.ModelBase`3.Key2
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2, TKey3>.Key2
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2, TKey3).Key2
  nameWithType: ModelBase<TKey1, TKey2, TKey3>.Key2
  nameWithType.vb: ModelBase(Of TKey1, TKey2, TKey3).Key2
- uid: CG.Business.Models.ModelBase`3.Key2*
  name: Key2
  href: api/CG.Business.Models.ModelBase-3.html#CG_Business_Models_ModelBase_3_Key2_
  commentId: Overload:CG.Business.Models.ModelBase`3.Key2
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2, TKey3>.Key2
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2, TKey3).Key2
  nameWithType: ModelBase<TKey1, TKey2, TKey3>.Key2
  nameWithType.vb: ModelBase(Of TKey1, TKey2, TKey3).Key2
- uid: CG.Business.Models.ModelBase`3.Key3
  name: Key3
  href: api/CG.Business.Models.ModelBase-3.html#CG_Business_Models_ModelBase_3_Key3
  commentId: P:CG.Business.Models.ModelBase`3.Key3
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2, TKey3>.Key3
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2, TKey3).Key3
  nameWithType: ModelBase<TKey1, TKey2, TKey3>.Key3
  nameWithType.vb: ModelBase(Of TKey1, TKey2, TKey3).Key3
- uid: CG.Business.Models.ModelBase`3.Key3*
  name: Key3
  href: api/CG.Business.Models.ModelBase-3.html#CG_Business_Models_ModelBase_3_Key3_
  commentId: Overload:CG.Business.Models.ModelBase`3.Key3
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2, TKey3>.Key3
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2, TKey3).Key3
  nameWithType: ModelBase<TKey1, TKey2, TKey3>.Key3
  nameWithType.vb: ModelBase(Of TKey1, TKey2, TKey3).Key3
- uid: CG.Business.Models.ModelBase`3.ToString
  name: ToString()
  href: api/CG.Business.Models.ModelBase-3.html#CG_Business_Models_ModelBase_3_ToString
  commentId: M:CG.Business.Models.ModelBase`3.ToString
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2, TKey3>.ToString()
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2, TKey3).ToString()
  nameWithType: ModelBase<TKey1, TKey2, TKey3>.ToString()
  nameWithType.vb: ModelBase(Of TKey1, TKey2, TKey3).ToString()
- uid: CG.Business.Models.ModelBase`3.ToString*
  name: ToString
  href: api/CG.Business.Models.ModelBase-3.html#CG_Business_Models_ModelBase_3_ToString_
  commentId: Overload:CG.Business.Models.ModelBase`3.ToString
  isSpec: "True"
  fullName: CG.Business.Models.ModelBase<TKey1, TKey2, TKey3>.ToString
  fullName.vb: CG.Business.Models.ModelBase(Of TKey1, TKey2, TKey3).ToString
  nameWithType: ModelBase<TKey1, TKey2, TKey3>.ToString
  nameWithType.vb: ModelBase(Of TKey1, TKey2, TKey3).ToString
- uid: CG.Business.Options
  name: CG.Business.Options
  href: api/CG.Business.Options.html
  commentId: N:CG.Business.Options
  fullName: CG.Business.Options
  nameWithType: CG.Business.Options
- uid: CG.Business.Options.LoaderOptions
  name: LoaderOptions
  href: api/CG.Business.Options.LoaderOptions.html
  commentId: T:CG.Business.Options.LoaderOptions
  fullName: CG.Business.Options.LoaderOptions
  nameWithType: LoaderOptions
- uid: CG.Business.Options.LoaderOptions.AssemblyNameOrPath
  name: AssemblyNameOrPath
  href: api/CG.Business.Options.LoaderOptions.html#CG_Business_Options_LoaderOptions_AssemblyNameOrPath
  commentId: P:CG.Business.Options.LoaderOptions.AssemblyNameOrPath
  fullName: CG.Business.Options.LoaderOptions.AssemblyNameOrPath
  nameWithType: LoaderOptions.AssemblyNameOrPath
- uid: CG.Business.Options.LoaderOptions.AssemblyNameOrPath*
  name: AssemblyNameOrPath
  href: api/CG.Business.Options.LoaderOptions.html#CG_Business_Options_LoaderOptions_AssemblyNameOrPath_
  commentId: Overload:CG.Business.Options.LoaderOptions.AssemblyNameOrPath
  isSpec: "True"
  fullName: CG.Business.Options.LoaderOptions.AssemblyNameOrPath
  nameWithType: LoaderOptions.AssemblyNameOrPath
- uid: CG.Business.Options.LoaderOptions.Name
  name: Name
  href: api/CG.Business.Options.LoaderOptions.html#CG_Business_Options_LoaderOptions_Name
  commentId: P:CG.Business.Options.LoaderOptions.Name
  fullName: CG.Business.Options.LoaderOptions.Name
  nameWithType: LoaderOptions.Name
- uid: CG.Business.Options.LoaderOptions.Name*
  name: Name
  href: api/CG.Business.Options.LoaderOptions.html#CG_Business_Options_LoaderOptions_Name_
  commentId: Overload:CG.Business.Options.LoaderOptions.Name
  isSpec: "True"
  fullName: CG.Business.Options.LoaderOptions.Name
  nameWithType: LoaderOptions.Name
- uid: CG.Business.Repositories
  name: CG.Business.Repositories
  href: api/CG.Business.Repositories.html
  commentId: N:CG.Business.Repositories
  fullName: CG.Business.Repositories
  nameWithType: CG.Business.Repositories
- uid: CG.Business.Repositories.IRepository
  name: IRepository
  href: api/CG.Business.Repositories.IRepository.html
  commentId: T:CG.Business.Repositories.IRepository
  fullName: CG.Business.Repositories.IRepository
  nameWithType: IRepository
- uid: CG.Business.Repositories.Options
  name: CG.Business.Repositories.Options
  href: api/CG.Business.Repositories.Options.html
  commentId: N:CG.Business.Repositories.Options
  fullName: CG.Business.Repositories.Options
  nameWithType: CG.Business.Repositories.Options
- uid: CG.Business.Repositories.Options.RepositoryOptions
  name: RepositoryOptions
  href: api/CG.Business.Repositories.Options.RepositoryOptions.html
  commentId: T:CG.Business.Repositories.Options.RepositoryOptions
  fullName: CG.Business.Repositories.Options.RepositoryOptions
  nameWithType: RepositoryOptions
- uid: CG.Business.Repositories.RepositoryBase
  name: RepositoryBase
  href: api/CG.Business.Repositories.RepositoryBase.html
  commentId: T:CG.Business.Repositories.RepositoryBase
  fullName: CG.Business.Repositories.RepositoryBase
  nameWithType: RepositoryBase
- uid: CG.Business.Repositories.RepositoryBase`1
  name: RepositoryBase<TOptions>
  href: api/CG.Business.Repositories.RepositoryBase-1.html
  commentId: T:CG.Business.Repositories.RepositoryBase`1
  name.vb: RepositoryBase(Of TOptions)
  fullName: CG.Business.Repositories.RepositoryBase<TOptions>
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions)
  nameWithType: RepositoryBase<TOptions>
  nameWithType.vb: RepositoryBase(Of TOptions)
- uid: CG.Business.Repositories.RepositoryBase`1.#ctor(`0)
  name: RepositoryBase(TOptions)
  href: api/CG.Business.Repositories.RepositoryBase-1.html#CG_Business_Repositories_RepositoryBase_1__ctor__0_
  commentId: M:CG.Business.Repositories.RepositoryBase`1.#ctor(`0)
  fullName: CG.Business.Repositories.RepositoryBase<TOptions>.RepositoryBase(TOptions)
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions).RepositoryBase(TOptions)
  nameWithType: RepositoryBase<TOptions>.RepositoryBase(TOptions)
  nameWithType.vb: RepositoryBase(Of TOptions).RepositoryBase(TOptions)
- uid: CG.Business.Repositories.RepositoryBase`1.#ctor*
  name: RepositoryBase
  href: api/CG.Business.Repositories.RepositoryBase-1.html#CG_Business_Repositories_RepositoryBase_1__ctor_
  commentId: Overload:CG.Business.Repositories.RepositoryBase`1.#ctor
  isSpec: "True"
  fullName: CG.Business.Repositories.RepositoryBase<TOptions>.RepositoryBase
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions).RepositoryBase
  nameWithType: RepositoryBase<TOptions>.RepositoryBase
  nameWithType.vb: RepositoryBase(Of TOptions).RepositoryBase
- uid: CG.Business.Repositories.RepositoryBase`1.Options
  name: Options
  href: api/CG.Business.Repositories.RepositoryBase-1.html#CG_Business_Repositories_RepositoryBase_1_Options
  commentId: P:CG.Business.Repositories.RepositoryBase`1.Options
  fullName: CG.Business.Repositories.RepositoryBase<TOptions>.Options
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions).Options
  nameWithType: RepositoryBase<TOptions>.Options
  nameWithType.vb: RepositoryBase(Of TOptions).Options
- uid: CG.Business.Repositories.RepositoryBase`1.Options*
  name: Options
  href: api/CG.Business.Repositories.RepositoryBase-1.html#CG_Business_Repositories_RepositoryBase_1_Options_
  commentId: Overload:CG.Business.Repositories.RepositoryBase`1.Options
  isSpec: "True"
  fullName: CG.Business.Repositories.RepositoryBase<TOptions>.Options
  fullName.vb: CG.Business.Repositories.RepositoryBase(Of TOptions).Options
  nameWithType: RepositoryBase<TOptions>.Options
  nameWithType.vb: RepositoryBase(Of TOptions).Options
- uid: CG.Business.Repositories.RepositoryException
  name: RepositoryException
  href: api/CG.Business.Repositories.RepositoryException.html
  commentId: T:CG.Business.Repositories.RepositoryException
  fullName: CG.Business.Repositories.RepositoryException
  nameWithType: RepositoryException
- uid: CG.Business.Repositories.RepositoryException.#ctor
  name: RepositoryException()
  href: api/CG.Business.Repositories.RepositoryException.html#CG_Business_Repositories_RepositoryException__ctor
  commentId: M:CG.Business.Repositories.RepositoryException.#ctor
  fullName: CG.Business.Repositories.RepositoryException.RepositoryException()
  nameWithType: RepositoryException.RepositoryException()
- uid: CG.Business.Repositories.RepositoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: RepositoryException(SerializationInfo, StreamingContext)
  href: api/CG.Business.Repositories.RepositoryException.html#CG_Business_Repositories_RepositoryException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:CG.Business.Repositories.RepositoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: CG.Business.Repositories.RepositoryException.RepositoryException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: RepositoryException.RepositoryException(SerializationInfo, StreamingContext)
- uid: CG.Business.Repositories.RepositoryException.#ctor(System.String)
  name: RepositoryException(String)
  href: api/CG.Business.Repositories.RepositoryException.html#CG_Business_Repositories_RepositoryException__ctor_System_String_
  commentId: M:CG.Business.Repositories.RepositoryException.#ctor(System.String)
  fullName: CG.Business.Repositories.RepositoryException.RepositoryException(System.String)
  nameWithType: RepositoryException.RepositoryException(String)
- uid: CG.Business.Repositories.RepositoryException.#ctor(System.String,System.Exception)
  name: RepositoryException(String, Exception)
  href: api/CG.Business.Repositories.RepositoryException.html#CG_Business_Repositories_RepositoryException__ctor_System_String_System_Exception_
  commentId: M:CG.Business.Repositories.RepositoryException.#ctor(System.String,System.Exception)
  fullName: CG.Business.Repositories.RepositoryException.RepositoryException(System.String, System.Exception)
  nameWithType: RepositoryException.RepositoryException(String, Exception)
- uid: CG.Business.Repositories.RepositoryException.#ctor*
  name: RepositoryException
  href: api/CG.Business.Repositories.RepositoryException.html#CG_Business_Repositories_RepositoryException__ctor_
  commentId: Overload:CG.Business.Repositories.RepositoryException.#ctor
  isSpec: "True"
  fullName: CG.Business.Repositories.RepositoryException.RepositoryException
  nameWithType: RepositoryException.RepositoryException
- uid: CG.Business.Services
  name: CG.Business.Services
  href: api/CG.Business.Services.html
  commentId: N:CG.Business.Services
  fullName: CG.Business.Services
  nameWithType: CG.Business.Services
- uid: CG.Business.Services.IService
  name: IService
  href: api/CG.Business.Services.IService.html
  commentId: T:CG.Business.Services.IService
  fullName: CG.Business.Services.IService
  nameWithType: IService
- uid: CG.Business.Services.Options
  name: CG.Business.Services.Options
  href: api/CG.Business.Services.Options.html
  commentId: N:CG.Business.Services.Options
  fullName: CG.Business.Services.Options
  nameWithType: CG.Business.Services.Options
- uid: CG.Business.Services.Options.ServiceOptions
  name: ServiceOptions
  href: api/CG.Business.Services.Options.ServiceOptions.html
  commentId: T:CG.Business.Services.Options.ServiceOptions
  fullName: CG.Business.Services.Options.ServiceOptions
  nameWithType: ServiceOptions
- uid: CG.Business.Services.ServiceBase
  name: ServiceBase
  href: api/CG.Business.Services.ServiceBase.html
  commentId: T:CG.Business.Services.ServiceBase
  fullName: CG.Business.Services.ServiceBase
  nameWithType: ServiceBase
- uid: CG.Business.Services.ServiceBase`1
  name: ServiceBase<TOptions>
  href: api/CG.Business.Services.ServiceBase-1.html
  commentId: T:CG.Business.Services.ServiceBase`1
  name.vb: ServiceBase(Of TOptions)
  fullName: CG.Business.Services.ServiceBase<TOptions>
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions)
  nameWithType: ServiceBase<TOptions>
  nameWithType.vb: ServiceBase(Of TOptions)
- uid: CG.Business.Services.ServiceBase`1.#ctor(Microsoft.Extensions.Options.IOptions{`0})
  name: ServiceBase(IOptions<TOptions>)
  href: api/CG.Business.Services.ServiceBase-1.html#CG_Business_Services_ServiceBase_1__ctor_Microsoft_Extensions_Options_IOptions__0__
  commentId: M:CG.Business.Services.ServiceBase`1.#ctor(Microsoft.Extensions.Options.IOptions{`0})
  name.vb: ServiceBase(IOptions(Of TOptions))
  fullName: CG.Business.Services.ServiceBase<TOptions>.ServiceBase(Microsoft.Extensions.Options.IOptions<TOptions>)
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions).ServiceBase(Microsoft.Extensions.Options.IOptions(Of TOptions))
  nameWithType: ServiceBase<TOptions>.ServiceBase(IOptions<TOptions>)
  nameWithType.vb: ServiceBase(Of TOptions).ServiceBase(IOptions(Of TOptions))
- uid: CG.Business.Services.ServiceBase`1.#ctor*
  name: ServiceBase
  href: api/CG.Business.Services.ServiceBase-1.html#CG_Business_Services_ServiceBase_1__ctor_
  commentId: Overload:CG.Business.Services.ServiceBase`1.#ctor
  isSpec: "True"
  fullName: CG.Business.Services.ServiceBase<TOptions>.ServiceBase
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions).ServiceBase
  nameWithType: ServiceBase<TOptions>.ServiceBase
  nameWithType.vb: ServiceBase(Of TOptions).ServiceBase
- uid: CG.Business.Services.ServiceBase`1.Options
  name: Options
  href: api/CG.Business.Services.ServiceBase-1.html#CG_Business_Services_ServiceBase_1_Options
  commentId: P:CG.Business.Services.ServiceBase`1.Options
  fullName: CG.Business.Services.ServiceBase<TOptions>.Options
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions).Options
  nameWithType: ServiceBase<TOptions>.Options
  nameWithType.vb: ServiceBase(Of TOptions).Options
- uid: CG.Business.Services.ServiceBase`1.Options*
  name: Options
  href: api/CG.Business.Services.ServiceBase-1.html#CG_Business_Services_ServiceBase_1_Options_
  commentId: Overload:CG.Business.Services.ServiceBase`1.Options
  isSpec: "True"
  fullName: CG.Business.Services.ServiceBase<TOptions>.Options
  fullName.vb: CG.Business.Services.ServiceBase(Of TOptions).Options
  nameWithType: ServiceBase<TOptions>.Options
  nameWithType.vb: ServiceBase(Of TOptions).Options
- uid: CG.Business.Services.ServiceException
  name: ServiceException
  href: api/CG.Business.Services.ServiceException.html
  commentId: T:CG.Business.Services.ServiceException
  fullName: CG.Business.Services.ServiceException
  nameWithType: ServiceException
- uid: CG.Business.Services.ServiceException.#ctor
  name: ServiceException()
  href: api/CG.Business.Services.ServiceException.html#CG_Business_Services_ServiceException__ctor
  commentId: M:CG.Business.Services.ServiceException.#ctor
  fullName: CG.Business.Services.ServiceException.ServiceException()
  nameWithType: ServiceException.ServiceException()
- uid: CG.Business.Services.ServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: ServiceException(SerializationInfo, StreamingContext)
  href: api/CG.Business.Services.ServiceException.html#CG_Business_Services_ServiceException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:CG.Business.Services.ServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: CG.Business.Services.ServiceException.ServiceException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: ServiceException.ServiceException(SerializationInfo, StreamingContext)
- uid: CG.Business.Services.ServiceException.#ctor(System.String)
  name: ServiceException(String)
  href: api/CG.Business.Services.ServiceException.html#CG_Business_Services_ServiceException__ctor_System_String_
  commentId: M:CG.Business.Services.ServiceException.#ctor(System.String)
  fullName: CG.Business.Services.ServiceException.ServiceException(System.String)
  nameWithType: ServiceException.ServiceException(String)
- uid: CG.Business.Services.ServiceException.#ctor(System.String,System.Exception)
  name: ServiceException(String, Exception)
  href: api/CG.Business.Services.ServiceException.html#CG_Business_Services_ServiceException__ctor_System_String_System_Exception_
  commentId: M:CG.Business.Services.ServiceException.#ctor(System.String,System.Exception)
  fullName: CG.Business.Services.ServiceException.ServiceException(System.String, System.Exception)
  nameWithType: ServiceException.ServiceException(String, Exception)
- uid: CG.Business.Services.ServiceException.#ctor*
  name: ServiceException
  href: api/CG.Business.Services.ServiceException.html#CG_Business_Services_ServiceException__ctor_
  commentId: Overload:CG.Business.Services.ServiceException.#ctor
  isSpec: "True"
  fullName: CG.Business.Services.ServiceException.ServiceException
  nameWithType: ServiceException.ServiceException
- uid: CG.Business.Stores
  name: CG.Business.Stores
  href: api/CG.Business.Stores.html
  commentId: N:CG.Business.Stores
  fullName: CG.Business.Stores
  nameWithType: CG.Business.Stores
- uid: CG.Business.Stores.IStore
  name: IStore
  href: api/CG.Business.Stores.IStore.html
  commentId: T:CG.Business.Stores.IStore
  fullName: CG.Business.Stores.IStore
  nameWithType: IStore
- uid: CG.Business.Stores.Options
  name: CG.Business.Stores.Options
  href: api/CG.Business.Stores.Options.html
  commentId: N:CG.Business.Stores.Options
  fullName: CG.Business.Stores.Options
  nameWithType: CG.Business.Stores.Options
- uid: CG.Business.Stores.Options.StoreOptions
  name: StoreOptions
  href: api/CG.Business.Stores.Options.StoreOptions.html
  commentId: T:CG.Business.Stores.Options.StoreOptions
  fullName: CG.Business.Stores.Options.StoreOptions
  nameWithType: StoreOptions
- uid: CG.Business.Stores.StoreBase
  name: StoreBase
  href: api/CG.Business.Stores.StoreBase.html
  commentId: T:CG.Business.Stores.StoreBase
  fullName: CG.Business.Stores.StoreBase
  nameWithType: StoreBase
- uid: CG.Business.Stores.StoreBase`1
  name: StoreBase<TOptions>
  href: api/CG.Business.Stores.StoreBase-1.html
  commentId: T:CG.Business.Stores.StoreBase`1
  name.vb: StoreBase(Of TOptions)
  fullName: CG.Business.Stores.StoreBase<TOptions>
  fullName.vb: CG.Business.Stores.StoreBase(Of TOptions)
  nameWithType: StoreBase<TOptions>
  nameWithType.vb: StoreBase(Of TOptions)
- uid: CG.Business.Stores.StoreBase`1.#ctor(Microsoft.Extensions.Options.IOptions{`0})
  name: StoreBase(IOptions<TOptions>)
  href: api/CG.Business.Stores.StoreBase-1.html#CG_Business_Stores_StoreBase_1__ctor_Microsoft_Extensions_Options_IOptions__0__
  commentId: M:CG.Business.Stores.StoreBase`1.#ctor(Microsoft.Extensions.Options.IOptions{`0})
  name.vb: StoreBase(IOptions(Of TOptions))
  fullName: CG.Business.Stores.StoreBase<TOptions>.StoreBase(Microsoft.Extensions.Options.IOptions<TOptions>)
  fullName.vb: CG.Business.Stores.StoreBase(Of TOptions).StoreBase(Microsoft.Extensions.Options.IOptions(Of TOptions))
  nameWithType: StoreBase<TOptions>.StoreBase(IOptions<TOptions>)
  nameWithType.vb: StoreBase(Of TOptions).StoreBase(IOptions(Of TOptions))
- uid: CG.Business.Stores.StoreBase`1.#ctor*
  name: StoreBase
  href: api/CG.Business.Stores.StoreBase-1.html#CG_Business_Stores_StoreBase_1__ctor_
  commentId: Overload:CG.Business.Stores.StoreBase`1.#ctor
  isSpec: "True"
  fullName: CG.Business.Stores.StoreBase<TOptions>.StoreBase
  fullName.vb: CG.Business.Stores.StoreBase(Of TOptions).StoreBase
  nameWithType: StoreBase<TOptions>.StoreBase
  nameWithType.vb: StoreBase(Of TOptions).StoreBase
- uid: CG.Business.Stores.StoreBase`1.Options
  name: Options
  href: api/CG.Business.Stores.StoreBase-1.html#CG_Business_Stores_StoreBase_1_Options
  commentId: P:CG.Business.Stores.StoreBase`1.Options
  fullName: CG.Business.Stores.StoreBase<TOptions>.Options
  fullName.vb: CG.Business.Stores.StoreBase(Of TOptions).Options
  nameWithType: StoreBase<TOptions>.Options
  nameWithType.vb: StoreBase(Of TOptions).Options
- uid: CG.Business.Stores.StoreBase`1.Options*
  name: Options
  href: api/CG.Business.Stores.StoreBase-1.html#CG_Business_Stores_StoreBase_1_Options_
  commentId: Overload:CG.Business.Stores.StoreBase`1.Options
  isSpec: "True"
  fullName: CG.Business.Stores.StoreBase<TOptions>.Options
  fullName.vb: CG.Business.Stores.StoreBase(Of TOptions).Options
  nameWithType: StoreBase<TOptions>.Options
  nameWithType.vb: StoreBase(Of TOptions).Options
- uid: CG.Business.Stores.StoreException
  name: StoreException
  href: api/CG.Business.Stores.StoreException.html
  commentId: T:CG.Business.Stores.StoreException
  fullName: CG.Business.Stores.StoreException
  nameWithType: StoreException
- uid: CG.Business.Stores.StoreException.#ctor
  name: StoreException()
  href: api/CG.Business.Stores.StoreException.html#CG_Business_Stores_StoreException__ctor
  commentId: M:CG.Business.Stores.StoreException.#ctor
  fullName: CG.Business.Stores.StoreException.StoreException()
  nameWithType: StoreException.StoreException()
- uid: CG.Business.Stores.StoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: StoreException(SerializationInfo, StreamingContext)
  href: api/CG.Business.Stores.StoreException.html#CG_Business_Stores_StoreException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:CG.Business.Stores.StoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: CG.Business.Stores.StoreException.StoreException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: StoreException.StoreException(SerializationInfo, StreamingContext)
- uid: CG.Business.Stores.StoreException.#ctor(System.String)
  name: StoreException(String)
  href: api/CG.Business.Stores.StoreException.html#CG_Business_Stores_StoreException__ctor_System_String_
  commentId: M:CG.Business.Stores.StoreException.#ctor(System.String)
  fullName: CG.Business.Stores.StoreException.StoreException(System.String)
  nameWithType: StoreException.StoreException(String)
- uid: CG.Business.Stores.StoreException.#ctor(System.String,System.Exception)
  name: StoreException(String, Exception)
  href: api/CG.Business.Stores.StoreException.html#CG_Business_Stores_StoreException__ctor_System_String_System_Exception_
  commentId: M:CG.Business.Stores.StoreException.#ctor(System.String,System.Exception)
  fullName: CG.Business.Stores.StoreException.StoreException(System.String, System.Exception)
  nameWithType: StoreException.StoreException(String, Exception)
- uid: CG.Business.Stores.StoreException.#ctor*
  name: StoreException
  href: api/CG.Business.Stores.StoreException.html#CG_Business_Stores_StoreException__ctor_
  commentId: Overload:CG.Business.Stores.StoreException.#ctor
  isSpec: "True"
  fullName: CG.Business.Stores.StoreException.StoreException
  nameWithType: StoreException.StoreException
- uid: CG.Business.Strategies
  name: CG.Business.Strategies
  href: api/CG.Business.Strategies.html
  commentId: N:CG.Business.Strategies
  fullName: CG.Business.Strategies
  nameWithType: CG.Business.Strategies
- uid: CG.Business.Strategies.IStrategy
  name: IStrategy
  href: api/CG.Business.Strategies.IStrategy.html
  commentId: T:CG.Business.Strategies.IStrategy
  fullName: CG.Business.Strategies.IStrategy
  nameWithType: IStrategy
- uid: CG.Business.Strategies.Options
  name: CG.Business.Strategies.Options
  href: api/CG.Business.Strategies.Options.html
  commentId: N:CG.Business.Strategies.Options
  fullName: CG.Business.Strategies.Options
  nameWithType: CG.Business.Strategies.Options
- uid: CG.Business.Strategies.Options.StrategyOptions
  name: StrategyOptions
  href: api/CG.Business.Strategies.Options.StrategyOptions.html
  commentId: T:CG.Business.Strategies.Options.StrategyOptions
  fullName: CG.Business.Strategies.Options.StrategyOptions
  nameWithType: StrategyOptions
- uid: CG.Business.Strategies.StrategyBase
  name: StrategyBase
  href: api/CG.Business.Strategies.StrategyBase.html
  commentId: T:CG.Business.Strategies.StrategyBase
  fullName: CG.Business.Strategies.StrategyBase
  nameWithType: StrategyBase
- uid: CG.Business.Strategies.StrategyBase`1
  name: StrategyBase<TOptions>
  href: api/CG.Business.Strategies.StrategyBase-1.html
  commentId: T:CG.Business.Strategies.StrategyBase`1
  name.vb: StrategyBase(Of TOptions)
  fullName: CG.Business.Strategies.StrategyBase<TOptions>
  fullName.vb: CG.Business.Strategies.StrategyBase(Of TOptions)
  nameWithType: StrategyBase<TOptions>
  nameWithType.vb: StrategyBase(Of TOptions)
- uid: CG.Business.Strategies.StrategyBase`1.#ctor(Microsoft.Extensions.Options.IOptions{`0})
  name: StrategyBase(IOptions<TOptions>)
  href: api/CG.Business.Strategies.StrategyBase-1.html#CG_Business_Strategies_StrategyBase_1__ctor_Microsoft_Extensions_Options_IOptions__0__
  commentId: M:CG.Business.Strategies.StrategyBase`1.#ctor(Microsoft.Extensions.Options.IOptions{`0})
  name.vb: StrategyBase(IOptions(Of TOptions))
  fullName: CG.Business.Strategies.StrategyBase<TOptions>.StrategyBase(Microsoft.Extensions.Options.IOptions<TOptions>)
  fullName.vb: CG.Business.Strategies.StrategyBase(Of TOptions).StrategyBase(Microsoft.Extensions.Options.IOptions(Of TOptions))
  nameWithType: StrategyBase<TOptions>.StrategyBase(IOptions<TOptions>)
  nameWithType.vb: StrategyBase(Of TOptions).StrategyBase(IOptions(Of TOptions))
- uid: CG.Business.Strategies.StrategyBase`1.#ctor*
  name: StrategyBase
  href: api/CG.Business.Strategies.StrategyBase-1.html#CG_Business_Strategies_StrategyBase_1__ctor_
  commentId: Overload:CG.Business.Strategies.StrategyBase`1.#ctor
  isSpec: "True"
  fullName: CG.Business.Strategies.StrategyBase<TOptions>.StrategyBase
  fullName.vb: CG.Business.Strategies.StrategyBase(Of TOptions).StrategyBase
  nameWithType: StrategyBase<TOptions>.StrategyBase
  nameWithType.vb: StrategyBase(Of TOptions).StrategyBase
- uid: CG.Business.Strategies.StrategyBase`1.Options
  name: Options
  href: api/CG.Business.Strategies.StrategyBase-1.html#CG_Business_Strategies_StrategyBase_1_Options
  commentId: P:CG.Business.Strategies.StrategyBase`1.Options
  fullName: CG.Business.Strategies.StrategyBase<TOptions>.Options
  fullName.vb: CG.Business.Strategies.StrategyBase(Of TOptions).Options
  nameWithType: StrategyBase<TOptions>.Options
  nameWithType.vb: StrategyBase(Of TOptions).Options
- uid: CG.Business.Strategies.StrategyBase`1.Options*
  name: Options
  href: api/CG.Business.Strategies.StrategyBase-1.html#CG_Business_Strategies_StrategyBase_1_Options_
  commentId: Overload:CG.Business.Strategies.StrategyBase`1.Options
  isSpec: "True"
  fullName: CG.Business.Strategies.StrategyBase<TOptions>.Options
  fullName.vb: CG.Business.Strategies.StrategyBase(Of TOptions).Options
  nameWithType: StrategyBase<TOptions>.Options
  nameWithType.vb: StrategyBase(Of TOptions).Options
- uid: CG.Business.Strategys
  name: CG.Business.Strategys
  href: api/CG.Business.Strategys.html
  commentId: N:CG.Business.Strategys
  fullName: CG.Business.Strategys
  nameWithType: CG.Business.Strategys
- uid: CG.Business.Strategys.StrategyException
  name: StrategyException
  href: api/CG.Business.Strategys.StrategyException.html
  commentId: T:CG.Business.Strategys.StrategyException
  fullName: CG.Business.Strategys.StrategyException
  nameWithType: StrategyException
- uid: CG.Business.Strategys.StrategyException.#ctor
  name: StrategyException()
  href: api/CG.Business.Strategys.StrategyException.html#CG_Business_Strategys_StrategyException__ctor
  commentId: M:CG.Business.Strategys.StrategyException.#ctor
  fullName: CG.Business.Strategys.StrategyException.StrategyException()
  nameWithType: StrategyException.StrategyException()
- uid: CG.Business.Strategys.StrategyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: StrategyException(SerializationInfo, StreamingContext)
  href: api/CG.Business.Strategys.StrategyException.html#CG_Business_Strategys_StrategyException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:CG.Business.Strategys.StrategyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: CG.Business.Strategys.StrategyException.StrategyException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: StrategyException.StrategyException(SerializationInfo, StreamingContext)
- uid: CG.Business.Strategys.StrategyException.#ctor(System.String)
  name: StrategyException(String)
  href: api/CG.Business.Strategys.StrategyException.html#CG_Business_Strategys_StrategyException__ctor_System_String_
  commentId: M:CG.Business.Strategys.StrategyException.#ctor(System.String)
  fullName: CG.Business.Strategys.StrategyException.StrategyException(System.String)
  nameWithType: StrategyException.StrategyException(String)
- uid: CG.Business.Strategys.StrategyException.#ctor(System.String,System.Exception)
  name: StrategyException(String, Exception)
  href: api/CG.Business.Strategys.StrategyException.html#CG_Business_Strategys_StrategyException__ctor_System_String_System_Exception_
  commentId: M:CG.Business.Strategys.StrategyException.#ctor(System.String,System.Exception)
  fullName: CG.Business.Strategys.StrategyException.StrategyException(System.String, System.Exception)
  nameWithType: StrategyException.StrategyException(String, Exception)
- uid: CG.Business.Strategys.StrategyException.#ctor*
  name: StrategyException
  href: api/CG.Business.Strategys.StrategyException.html#CG_Business_Strategys_StrategyException__ctor_
  commentId: Overload:CG.Business.Strategys.StrategyException.#ctor
  isSpec: "True"
  fullName: CG.Business.Strategys.StrategyException.StrategyException
  nameWithType: StrategyException.StrategyException
- uid: Microsoft.AspNetCore.Builder
  name: Microsoft.AspNetCore.Builder
  href: api/Microsoft.AspNetCore.Builder.html
  commentId: N:Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
- uid: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions
  name: ApplicationBuilderExtensions
  href: api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html
  commentId: T:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions
  fullName: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions
  nameWithType: ApplicationBuilderExtensions
- uid: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseStrategies(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String,System.String)
  name: UseStrategies(IApplicationBuilder, IHostEnvironment, IConfiguration, String, String, String)
  href: api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html#Microsoft_AspNetCore_Builder_ApplicationBuilderExtensions_UseStrategies_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_Extensions_Hosting_IHostEnvironment_Microsoft_Extensions_Configuration_IConfiguration_System_String_System_String_System_String_
  commentId: M:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseStrategies(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String,System.String)
  fullName: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseStrategies(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.Extensions.Hosting.IHostEnvironment, Microsoft.Extensions.Configuration.IConfiguration, System.String, System.String, System.String)
  nameWithType: ApplicationBuilderExtensions.UseStrategies(IApplicationBuilder, IHostEnvironment, IConfiguration, String, String, String)
- uid: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseStrategies*
  name: UseStrategies
  href: api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html#Microsoft_AspNetCore_Builder_ApplicationBuilderExtensions_UseStrategies_
  commentId: Overload:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseStrategies
  isSpec: "True"
  fullName: Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseStrategies
  nameWithType: ApplicationBuilderExtensions.UseStrategies
- uid: Microsoft.AspNetCore.Builder.RepositoriesApplicationBuilderExtensions
  name: RepositoriesApplicationBuilderExtensions
  href: api/Microsoft.AspNetCore.Builder.RepositoriesApplicationBuilderExtensions.html
  commentId: T:Microsoft.AspNetCore.Builder.RepositoriesApplicationBuilderExtensions
  fullName: Microsoft.AspNetCore.Builder.RepositoriesApplicationBuilderExtensions
  nameWithType: RepositoriesApplicationBuilderExtensions
- uid: Microsoft.AspNetCore.Builder.RepositoriesApplicationBuilderExtensions.UseRepositories(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String,System.String)
  name: UseRepositories(IApplicationBuilder, IHostEnvironment, IConfiguration, String, String, String)
  href: api/Microsoft.AspNetCore.Builder.RepositoriesApplicationBuilderExtensions.html#Microsoft_AspNetCore_Builder_RepositoriesApplicationBuilderExtensions_UseRepositories_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_Extensions_Hosting_IHostEnvironment_Microsoft_Extensions_Configuration_IConfiguration_System_String_System_String_System_String_
  commentId: M:Microsoft.AspNetCore.Builder.RepositoriesApplicationBuilderExtensions.UseRepositories(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String,System.String)
  fullName: Microsoft.AspNetCore.Builder.RepositoriesApplicationBuilderExtensions.UseRepositories(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.Extensions.Hosting.IHostEnvironment, Microsoft.Extensions.Configuration.IConfiguration, System.String, System.String, System.String)
  nameWithType: RepositoriesApplicationBuilderExtensions.UseRepositories(IApplicationBuilder, IHostEnvironment, IConfiguration, String, String, String)
- uid: Microsoft.AspNetCore.Builder.RepositoriesApplicationBuilderExtensions.UseRepositories*
  name: UseRepositories
  href: api/Microsoft.AspNetCore.Builder.RepositoriesApplicationBuilderExtensions.html#Microsoft_AspNetCore_Builder_RepositoriesApplicationBuilderExtensions_UseRepositories_
  commentId: Overload:Microsoft.AspNetCore.Builder.RepositoriesApplicationBuilderExtensions.UseRepositories
  isSpec: "True"
  fullName: Microsoft.AspNetCore.Builder.RepositoriesApplicationBuilderExtensions.UseRepositories
  nameWithType: RepositoriesApplicationBuilderExtensions.UseRepositories
- uid: Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  href: api/Microsoft.Extensions.DependencyInjection.html
  commentId: N:Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html
  commentId: T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceLifetime,System.String,System.String,System.String)
  name: AddRepositories(IServiceCollection, IConfiguration, ServiceLifetime, String, String, String)
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddRepositories_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_ServiceLifetime_System_String_System_String_System_String_
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceLifetime,System.String,System.String,System.String)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.ServiceLifetime, System.String, System.String, System.String)
  nameWithType: ServiceCollectionExtensions.AddRepositories(IServiceCollection, IConfiguration, ServiceLifetime, String, String, String)
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddRepositories*
  name: AddRepositories
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddRepositories_
  commentId: Overload:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddRepositories
  isSpec: "True"
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddRepositories
  nameWithType: ServiceCollectionExtensions.AddRepositories
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddStrategies(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceLifetime,System.String,System.String,System.String)
  name: AddStrategies(IServiceCollection, IConfiguration, ServiceLifetime, String, String, String)
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddStrategies_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_ServiceLifetime_System_String_System_String_System_String_
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddStrategies(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceLifetime,System.String,System.String,System.String)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddStrategies(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.ServiceLifetime, System.String, System.String, System.String)
  nameWithType: ServiceCollectionExtensions.AddStrategies(IServiceCollection, IConfiguration, ServiceLifetime, String, String, String)
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddStrategies*
  name: AddStrategies
  href: api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_ServiceCollectionExtensions_AddStrategies_
  commentId: Overload:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddStrategies
  isSpec: "True"
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddStrategies
  nameWithType: ServiceCollectionExtensions.AddStrategies
