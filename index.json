{
  "api/CG.Business.Builders.BuilderBase.html": {
    "href": "api/CG.Business.Builders.BuilderBase.html",
    "title": "Class BuilderBase",
    "keywords": "Class BuilderBase This class is a default implementation of the IBuilder interface. Inheritance System.Object BuilderBase Implements IBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Builders Assembly : CG.Business.dll Syntax public abstract class BuilderBase : IBuilder Properties ServiceCollection This property contains a reference to a service collection. Declaration public IServiceCollection ServiceCollection { get; set; } Property Value Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection Implements IBuilder"
  },
  "api/CG.Business.Builders.html": {
    "href": "api/CG.Business.Builders.html",
    "title": "Namespace CG.Business.Builders",
    "keywords": "Namespace CG.Business.Builders Classes BuilderBase This class is a default implementation of the IBuilder interface. Interfaces IBuilder This interface represents an object that builds up other object types, at runtime."
  },
  "api/CG.Business.Builders.IBuilder.html": {
    "href": "api/CG.Business.Builders.IBuilder.html",
    "title": "Interface IBuilder",
    "keywords": "Interface IBuilder This interface represents an object that builds up other object types, at runtime. Namespace : CG.Business.Builders Assembly : CG.Business.dll Syntax public interface IBuilder Properties ServiceCollection This property contains a reference to a service collection. Declaration IServiceCollection ServiceCollection { get; set; } Property Value Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection"
  },
  "api/CG.Business.BusinessException.html": {
    "href": "api/CG.Business.BusinessException.html",
    "title": "Class BusinessException",
    "keywords": "Class BusinessException This class represents a business related exception. Inheritance System.Object System.Exception BusinessException RepositoryException ServiceException StoreException StrategyException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Business Assembly : CG.Business.dll Syntax [Serializable] public class BusinessException : Exception, ISerializable Constructors BusinessException() This constructor creates a new instance of the BusinessException class. Declaration public BusinessException() BusinessException(SerializationInfo, StreamingContext) This constructor creates a new instance of the BusinessException class. Declaration public BusinessException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The serialization info to use for the exception. System.Runtime.Serialization.StreamingContext context The streaming context to use for the exception. BusinessException(String) This constructor creates a new instance of the BusinessException class. Declaration public BusinessException(string message) Parameters Type Name Description System.String message The message to use for the exception. BusinessException(String, Exception) This constructor creates a new instance of the BusinessException class. Declaration public BusinessException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. System.Exception innerException An optional inner exception reference. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/CG.Business.html": {
    "href": "api/CG.Business.html",
    "title": "Namespace CG.Business",
    "keywords": "Namespace CG.Business Classes BusinessException This class represents a business related exception."
  },
  "api/CG.Business.Models.html": {
    "href": "api/CG.Business.Models.html",
    "title": "Namespace CG.Business.Models",
    "keywords": "Namespace CG.Business.Models Classes ModelBase This class is a default implmentation of the IModel interface. ModelBase<TKey> This class is a default implmentation of the IModel interface. ModelBase<TKey1, TKey2> This class is a default implementation of the IModel<TKey1, TKey2> interface. ModelBase<TKey1, TKey2, TKey3> This class is a default implementation of the IModel<TKey1, TKey2, TKey3> interface. Interfaces IModel This interface represents a business model. IModel<TKey> This interface represents a business model. IModel<TKey1, TKey2> This interface represents a business model. IModel<TKey1, TKey2, TKey3> This interface represents a business model."
  },
  "api/CG.Business.Models.IModel.html": {
    "href": "api/CG.Business.Models.IModel.html",
    "title": "Interface IModel",
    "keywords": "Interface IModel This interface represents a business model. Namespace : CG.Business.Models Assembly : CG.Business.dll Syntax public interface IModel"
  },
  "api/CG.Business.Models.IModel-1.html": {
    "href": "api/CG.Business.Models.IModel-1.html",
    "title": "Interface IModel<TKey>",
    "keywords": "Interface IModel<TKey> This interface represents a business model. Namespace : CG.Business.Models Assembly : CG.Business.dll Syntax public interface IModel<TKey> : IModel where TKey : new() Type Parameters Name Description TKey The type of associated model key. Properties Key This property contains the key for the model. Declaration TKey Key { get; set; } Property Value Type Description TKey"
  },
  "api/CG.Business.Models.IModel-2.html": {
    "href": "api/CG.Business.Models.IModel-2.html",
    "title": "Interface IModel<TKey1, TKey2>",
    "keywords": "Interface IModel<TKey1, TKey2> This interface represents a business model. Namespace : CG.Business.Models Assembly : CG.Business.dll Syntax public interface IModel<TKey1, TKey2> : IModel where TKey1 : new() where TKey2 : new() Type Parameters Name Description TKey1 The type of associated model key 1. TKey2 The type of associated model key 2. Properties Key1 This property contains the key 1 for the model. Declaration TKey1 Key1 { get; set; } Property Value Type Description TKey1 Key2 This property contains the key 2 for the model. Declaration TKey2 Key2 { get; set; } Property Value Type Description TKey2"
  },
  "api/CG.Business.Models.IModel-3.html": {
    "href": "api/CG.Business.Models.IModel-3.html",
    "title": "Interface IModel<TKey1, TKey2, TKey3>",
    "keywords": "Interface IModel<TKey1, TKey2, TKey3> This interface represents a business model. Namespace : CG.Business.Models Assembly : CG.Business.dll Syntax public interface IModel<TKey1, TKey2, TKey3> : IModel where TKey1 : new() where TKey2 : new() where TKey3 : new() Type Parameters Name Description TKey1 The type of associated model key 1. TKey2 The type of associated model key 2. TKey3 The type of associated model key 2. Properties Key1 This property contains the key 1 for the model. Declaration TKey1 Key1 { get; set; } Property Value Type Description TKey1 Key2 This property contains the key 2 for the model. Declaration TKey2 Key2 { get; set; } Property Value Type Description TKey2 Key3 This property contains the key 3 for the model. Declaration TKey3 Key3 { get; set; } Property Value Type Description TKey3"
  },
  "api/CG.Business.Models.ModelBase.html": {
    "href": "api/CG.Business.Models.ModelBase.html",
    "title": "Class ModelBase",
    "keywords": "Class ModelBase This class is a default implmentation of the IModel interface. Inheritance System.Object CG.DataAnnotations.ValidatableObject ModelBase ModelBase<TKey> ModelBase<TKey1, TKey2> ModelBase<TKey1, TKey2, TKey3> Implements System.ComponentModel.DataAnnotations.IValidatableObject IModel Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Models Assembly : CG.Business.dll Syntax public class ModelBase : ValidatableObject, IValidatableObject, IModel Implements System.ComponentModel.DataAnnotations.IValidatableObject IModel"
  },
  "api/CG.Business.Models.ModelBase-1.html": {
    "href": "api/CG.Business.Models.ModelBase-1.html",
    "title": "Class ModelBase<TKey>",
    "keywords": "Class ModelBase<TKey> This class is a default implmentation of the IModel interface. Inheritance System.Object CG.DataAnnotations.ValidatableObject ModelBase ModelBase<TKey> Implements System.ComponentModel.DataAnnotations.IValidatableObject IModel <TKey> IModel Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Business.Models Assembly : CG.Business.dll Syntax public class ModelBase<TKey> : ModelBase, IValidatableObject, IModel<TKey>, IModel where TKey : new() Type Parameters Name Description TKey The type of associated model key. Properties Key This property contains the key for the model. Declaration [Key] public TKey Key { get; set; } Property Value Type Description TKey Methods Equals(Object) This method is overriden in order to determine equality. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The model to compare with. Returns Type Description System.Boolean True if the objects are equal; false otherwise. Overrides System.Object.Equals(System.Object) GetHashCode() This method is overridden in order to generate a unique hash code for the model. Declaration public override int GetHashCode() Returns Type Description System.Int32 An integer hash code that represents the model. Overrides System.Object.GetHashCode() ToString() This method returns a string that represents the current model. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Overrides System.Object.ToString() Implements System.ComponentModel.DataAnnotations.IValidatableObject IModel<TKey> IModel"
  },
  "api/CG.Business.Models.ModelBase-2.html": {
    "href": "api/CG.Business.Models.ModelBase-2.html",
    "title": "Class ModelBase<TKey1, TKey2>",
    "keywords": "Class ModelBase<TKey1, TKey2> This class is a default implementation of the IModel<TKey1, TKey2> interface. Inheritance System.Object CG.DataAnnotations.ValidatableObject ModelBase ModelBase<TKey1, TKey2> Implements System.ComponentModel.DataAnnotations.IValidatableObject IModel <TKey1, TKey2> IModel Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Business.Models Assembly : CG.Business.dll Syntax public class ModelBase<TKey1, TKey2> : ModelBase, IValidatableObject, IModel<TKey1, TKey2>, IModel where TKey1 : new() where TKey2 : new() Type Parameters Name Description TKey1 The type of associated model key 1. TKey2 The type of associated model key 2. Properties Key1 This property contains the key 1 for the model. Declaration [Key] [Column(Order = 0)] public TKey1 Key1 { get; set; } Property Value Type Description TKey1 Key2 This property contains the key 2 for the model. Declaration [Key] [Column(Order = 1)] public TKey2 Key2 { get; set; } Property Value Type Description TKey2 Methods Equals(Object) This method is overriden in order to determine equality. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The model to compare with. Returns Type Description System.Boolean True if the objects are equal; false otherwise. Overrides System.Object.Equals(System.Object) GetHashCode() This method is overridden in order to generate a unique hash code for the model. Declaration public override int GetHashCode() Returns Type Description System.Int32 An integer hash code that represents the model. Overrides System.Object.GetHashCode() ToString() This method returns a string that represents the current model. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Overrides System.Object.ToString() Implements System.ComponentModel.DataAnnotations.IValidatableObject IModel<TKey1, TKey2> IModel"
  },
  "api/CG.Business.Models.ModelBase-3.html": {
    "href": "api/CG.Business.Models.ModelBase-3.html",
    "title": "Class ModelBase<TKey1, TKey2, TKey3>",
    "keywords": "Class ModelBase<TKey1, TKey2, TKey3> This class is a default implementation of the IModel<TKey1, TKey2, TKey3> interface. Inheritance System.Object CG.DataAnnotations.ValidatableObject ModelBase ModelBase<TKey1, TKey2, TKey3> Implements System.ComponentModel.DataAnnotations.IValidatableObject IModel <TKey1, TKey2, TKey3> IModel Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Business.Models Assembly : CG.Business.dll Syntax public class ModelBase<TKey1, TKey2, TKey3> : ModelBase, IValidatableObject, IModel<TKey1, TKey2, TKey3>, IModel where TKey1 : new() where TKey2 : new() where TKey3 : new() Type Parameters Name Description TKey1 The type of associated model key 1. TKey2 The type of associated model key 2. TKey3 The type of associated model key 3. Properties Key1 This property contains the key 1 for the model. Declaration [Key] [Column(Order = 0)] public TKey1 Key1 { get; set; } Property Value Type Description TKey1 Key2 This property contains the key 2 for the model. Declaration [Key] [Column(Order = 1)] public TKey2 Key2 { get; set; } Property Value Type Description TKey2 Key3 This property contains the key 3 for the model. Declaration [Key] [Column(Order = 2)] public TKey3 Key3 { get; set; } Property Value Type Description TKey3 Methods Equals(Object) This method is overriden in order to determine equality. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The model to compare with. Returns Type Description System.Boolean True if the objects are equal; false otherwise. Overrides System.Object.Equals(System.Object) GetHashCode() This method is overridden in order to generate a unique hash code for the model. Declaration public override int GetHashCode() Returns Type Description System.Int32 An integer hash code that represents the model. Overrides System.Object.GetHashCode() ToString() This method returns a string that represents the current model. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Overrides System.Object.ToString() Implements System.ComponentModel.DataAnnotations.IValidatableObject IModel<TKey1, TKey2, TKey3> IModel"
  },
  "api/CG.Business.Options.html": {
    "href": "api/CG.Business.Options.html",
    "title": "Namespace CG.Business.Options",
    "keywords": "Namespace CG.Business.Options Classes LoaderOptions This class represents configuration settings for a strategy loader."
  },
  "api/CG.Business.Options.LoaderOptions.html": {
    "href": "api/CG.Business.Options.LoaderOptions.html",
    "title": "Class LoaderOptions",
    "keywords": "Class LoaderOptions This class represents configuration settings for a strategy loader. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase LoaderOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Options Assembly : CG.Business.dll Syntax public sealed class LoaderOptions : OptionsBase, IValidatableObject Properties AssemblyNameOrPath This property contains the optional name of, or path to, an assembly that contains one or more extension method(s), for the loader strategy. Declaration public string AssemblyNameOrPath { get; set; } Property Value Type Description System.String Name This property contains the name of a configured loader strategy. Declaration [Required(ErrorMessageResourceName = \"LoaderOptions_Name\", ErrorMessageResourceType = typeof(Resources))] public string Name { get; set; } Property Value Type Description System.String Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Business.Repositories.html": {
    "href": "api/CG.Business.Repositories.html",
    "title": "Namespace CG.Business.Repositories",
    "keywords": "Namespace CG.Business.Repositories Classes RepositoryBase This class represents a base implementation of the IRepository inteface. RepositoryBase<TOptions> This class represents a base implementation of the IRepository interface. RepositoryException This class represents a repository related exception. Interfaces IRepository This interface represents an object that manages low-level data operations - typically to and from a database."
  },
  "api/CG.Business.Repositories.IRepository.html": {
    "href": "api/CG.Business.Repositories.IRepository.html",
    "title": "Interface IRepository",
    "keywords": "Interface IRepository This interface represents an object that manages low-level data operations - typically to and from a database. Inherited Members System.IDisposable.Dispose() Namespace : CG.Business.Repositories Assembly : CG.Business.dll Syntax public interface IRepository : IDisposable"
  },
  "api/CG.Business.Repositories.Options.html": {
    "href": "api/CG.Business.Repositories.Options.html",
    "title": "Namespace CG.Business.Repositories.Options",
    "keywords": "Namespace CG.Business.Repositories.Options Classes RepositoryOptions This class represents configuration options for a repository."
  },
  "api/CG.Business.Repositories.Options.RepositoryOptions.html": {
    "href": "api/CG.Business.Repositories.Options.RepositoryOptions.html",
    "title": "Class RepositoryOptions",
    "keywords": "Class RepositoryOptions This class represents configuration options for a repository. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase RepositoryOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Repositories.Options Assembly : CG.Business.dll Syntax public class RepositoryOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Business.Repositories.RepositoryBase.html": {
    "href": "api/CG.Business.Repositories.RepositoryBase.html",
    "title": "Class RepositoryBase",
    "keywords": "Class RepositoryBase This class represents a base implementation of the IRepository inteface. Inheritance System.Object CG.DisposableBase RepositoryBase RepositoryBase<TOptions> Implements IRepository System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Repositories Assembly : CG.Business.dll Syntax public abstract class RepositoryBase : DisposableBase, IRepository, IDisposable Implements IRepository System.IDisposable"
  },
  "api/CG.Business.Repositories.RepositoryBase-1.html": {
    "href": "api/CG.Business.Repositories.RepositoryBase-1.html",
    "title": "Class RepositoryBase<TOptions>",
    "keywords": "Class RepositoryBase<TOptions> This class represents a base implementation of the IRepository interface. Inheritance System.Object CG.DisposableBase RepositoryBase RepositoryBase<TOptions> Implements IRepository System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Repositories Assembly : CG.Business.dll Syntax public abstract class RepositoryBase<TOptions> : RepositoryBase, IRepository, IDisposable where TOptions : IOptions<RepositoryOptions> Type Parameters Name Description TOptions The type of associated options. Constructors RepositoryBase(TOptions) This constructor creates a new instance of the RepositoryBase<TOptions> class. Declaration public RepositoryBase(TOptions options) Parameters Type Name Description TOptions options The options to use with the repository. Properties Options This property contains options for the repository. Declaration protected TOptions Options { get; } Property Value Type Description TOptions Implements IRepository System.IDisposable"
  },
  "api/CG.Business.Repositories.RepositoryException.html": {
    "href": "api/CG.Business.Repositories.RepositoryException.html",
    "title": "Class RepositoryException",
    "keywords": "Class RepositoryException This class represents a repository related exception. Inheritance System.Object System.Exception BusinessException RepositoryException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Business.Repositories Assembly : CG.Business.dll Syntax [Serializable] public class RepositoryException : BusinessException, ISerializable Constructors RepositoryException() This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException() RepositoryException(SerializationInfo, StreamingContext) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The serialization info to use for the exception. System.Runtime.Serialization.StreamingContext context The streaming context to use for the exception. RepositoryException(String) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(string message) Parameters Type Name Description System.String message The message to use for the exception. RepositoryException(String, Exception) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. System.Exception innerException An optional inner exception reference. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/CG.Business.Services.html": {
    "href": "api/CG.Business.Services.html",
    "title": "Namespace CG.Business.Services",
    "keywords": "Namespace CG.Business.Services Classes ServiceBase This class represents a base implementation of the IService inteface. ServiceBase<TOptions> This class represents a base implementation of the IService interface. ServiceException This class represents a repository related exception. Interfaces IService This interface represents an object that performs automated tasks, responds to events, or listens for processing requests."
  },
  "api/CG.Business.Services.IService.html": {
    "href": "api/CG.Business.Services.IService.html",
    "title": "Interface IService",
    "keywords": "Interface IService This interface represents an object that performs automated tasks, responds to events, or listens for processing requests. Inherited Members System.IDisposable.Dispose() Namespace : CG.Business.Services Assembly : CG.Business.dll Syntax public interface IService : IDisposable"
  },
  "api/CG.Business.Services.Options.html": {
    "href": "api/CG.Business.Services.Options.html",
    "title": "Namespace CG.Business.Services.Options",
    "keywords": "Namespace CG.Business.Services.Options Classes ServiceOptions This class represents configuration options for a service."
  },
  "api/CG.Business.Services.Options.ServiceOptions.html": {
    "href": "api/CG.Business.Services.Options.ServiceOptions.html",
    "title": "Class ServiceOptions",
    "keywords": "Class ServiceOptions This class represents configuration options for a service. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase ServiceOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Services.Options Assembly : CG.Business.dll Syntax public class ServiceOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Business.Services.ServiceBase.html": {
    "href": "api/CG.Business.Services.ServiceBase.html",
    "title": "Class ServiceBase",
    "keywords": "Class ServiceBase This class represents a base implementation of the IService inteface. Inheritance System.Object CG.DisposableBase ServiceBase ServiceBase<TOptions> Implements IService System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Services Assembly : CG.Business.dll Syntax public abstract class ServiceBase : DisposableBase, IService, IDisposable Implements IService System.IDisposable"
  },
  "api/CG.Business.Services.ServiceBase-1.html": {
    "href": "api/CG.Business.Services.ServiceBase-1.html",
    "title": "Class ServiceBase<TOptions>",
    "keywords": "Class ServiceBase<TOptions> This class represents a base implementation of the IService interface. Inheritance System.Object CG.DisposableBase ServiceBase ServiceBase<TOptions> Implements IService System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Services Assembly : CG.Business.dll Syntax public abstract class ServiceBase<TOptions> : ServiceBase, IService, IDisposable where TOptions : ServiceOptions, new() Type Parameters Name Description TOptions The type of associated options. Constructors ServiceBase(IOptions<TOptions>) This constructor creates a new instance of the ServiceBase<TOptions> class. Declaration public ServiceBase(IOptions<TOptions> options) Parameters Type Name Description Microsoft.Extensions.Options.IOptions <TOptions> options The options to use with the service. Properties Options This property contains options for the service. Declaration protected IOptions<TOptions> Options { get; } Property Value Type Description Microsoft.Extensions.Options.IOptions <TOptions> Implements IService System.IDisposable"
  },
  "api/CG.Business.Services.ServiceException.html": {
    "href": "api/CG.Business.Services.ServiceException.html",
    "title": "Class ServiceException",
    "keywords": "Class ServiceException This class represents a repository related exception. Inheritance System.Object System.Exception BusinessException ServiceException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Business.Services Assembly : CG.Business.dll Syntax [Serializable] public class ServiceException : BusinessException, ISerializable Constructors ServiceException() This constructor creates a new instance of the ServiceException class. Declaration public ServiceException() ServiceException(SerializationInfo, StreamingContext) This constructor creates a new instance of the ServiceException class. Declaration public ServiceException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The serialization info to use for the exception. System.Runtime.Serialization.StreamingContext context The streaming context to use for the exception. ServiceException(String) This constructor creates a new instance of the ServiceException class. Declaration public ServiceException(string message) Parameters Type Name Description System.String message The message to use for the exception. ServiceException(String, Exception) This constructor creates a new instance of the ServiceException class. Declaration public ServiceException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. System.Exception innerException An optional inner exception reference. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/CG.Business.Stores.html": {
    "href": "api/CG.Business.Stores.html",
    "title": "Namespace CG.Business.Stores",
    "keywords": "Namespace CG.Business.Stores Classes StoreBase This class represents a base implementation of the IStore interface. StoreBase<TOptions> This class represents a base implementation of the IStore interface. StoreException This class represents a store related exception. Interfaces IStore This interface represents an object that performs business operations on a specific type of data."
  },
  "api/CG.Business.Stores.IStore.html": {
    "href": "api/CG.Business.Stores.IStore.html",
    "title": "Interface IStore",
    "keywords": "Interface IStore This interface represents an object that performs business operations on a specific type of data. Inherited Members System.IDisposable.Dispose() Namespace : CG.Business.Stores Assembly : CG.Business.dll Syntax public interface IStore : IDisposable"
  },
  "api/CG.Business.Stores.Options.html": {
    "href": "api/CG.Business.Stores.Options.html",
    "title": "Namespace CG.Business.Stores.Options",
    "keywords": "Namespace CG.Business.Stores.Options Classes StoreOptions This class represents configuration options for a store."
  },
  "api/CG.Business.Stores.Options.StoreOptions.html": {
    "href": "api/CG.Business.Stores.Options.StoreOptions.html",
    "title": "Class StoreOptions",
    "keywords": "Class StoreOptions This class represents configuration options for a store. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase StoreOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Stores.Options Assembly : CG.Business.dll Syntax public class StoreOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Business.Stores.StoreBase.html": {
    "href": "api/CG.Business.Stores.StoreBase.html",
    "title": "Class StoreBase",
    "keywords": "Class StoreBase This class represents a base implementation of the IStore interface. Inheritance System.Object CG.DisposableBase StoreBase StoreBase<TOptions> Implements IStore System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Stores Assembly : CG.Business.dll Syntax public abstract class StoreBase : DisposableBase, IStore, IDisposable Implements IStore System.IDisposable"
  },
  "api/CG.Business.Stores.StoreBase-1.html": {
    "href": "api/CG.Business.Stores.StoreBase-1.html",
    "title": "Class StoreBase<TOptions>",
    "keywords": "Class StoreBase<TOptions> This class represents a base implementation of the IStore interface. Inheritance System.Object CG.DisposableBase StoreBase StoreBase<TOptions> Implements IStore System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Stores Assembly : CG.Business.dll Syntax public abstract class StoreBase<TOptions> : StoreBase, IStore, IDisposable where TOptions : StoreOptions, new() Type Parameters Name Description TOptions The type of associated options. Constructors StoreBase(IOptions<TOptions>) This constructor creates a new instance of the StoreBase<TOptions> class. Declaration public StoreBase(IOptions<TOptions> options) Parameters Type Name Description Microsoft.Extensions.Options.IOptions <TOptions> options The options to use with the store. Properties Options This property contains options for the manager. Declaration protected IOptions<TOptions> Options { get; } Property Value Type Description Microsoft.Extensions.Options.IOptions <TOptions> Implements IStore System.IDisposable"
  },
  "api/CG.Business.Stores.StoreException.html": {
    "href": "api/CG.Business.Stores.StoreException.html",
    "title": "Class StoreException",
    "keywords": "Class StoreException This class represents a store related exception. Inheritance System.Object System.Exception BusinessException StoreException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Business.Stores Assembly : CG.Business.dll Syntax [Serializable] public class StoreException : BusinessException, ISerializable Constructors StoreException() This constructor creates a new instance of the StoreException class. Declaration public StoreException() StoreException(SerializationInfo, StreamingContext) This constructor creates a new instance of the StoreException class. Declaration public StoreException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The serialization info to use for the exception. System.Runtime.Serialization.StreamingContext context The streaming context to use for the exception. StoreException(String) This constructor creates a new instance of the StoreException class. Declaration public StoreException(string message) Parameters Type Name Description System.String message The message to use for the exception. StoreException(String, Exception) This constructor creates a new instance of the StoreException class. Declaration public StoreException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. System.Exception innerException An optional inner exception reference. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/CG.Business.Strategies.html": {
    "href": "api/CG.Business.Strategies.html",
    "title": "Namespace CG.Business.Strategies",
    "keywords": "Namespace CG.Business.Strategies Classes StrategyBase This class represents a base implementation of the IStrategy inteface. StrategyBase<TOptions> This class represents a base implementation of the IStrategy interface. Interfaces IStrategy This interface represents an object that enables selecting and algorithm at runtime."
  },
  "api/CG.Business.Strategies.IStrategy.html": {
    "href": "api/CG.Business.Strategies.IStrategy.html",
    "title": "Interface IStrategy",
    "keywords": "Interface IStrategy This interface represents an object that enables selecting and algorithm at runtime. Inherited Members System.IDisposable.Dispose() Namespace : CG.Business.Strategies Assembly : CG.Business.dll Syntax public interface IStrategy : IDisposable"
  },
  "api/CG.Business.Strategies.Options.html": {
    "href": "api/CG.Business.Strategies.Options.html",
    "title": "Namespace CG.Business.Strategies.Options",
    "keywords": "Namespace CG.Business.Strategies.Options Classes StrategyOptions This class represents configuration options for a strategy."
  },
  "api/CG.Business.Strategies.Options.StrategyOptions.html": {
    "href": "api/CG.Business.Strategies.Options.StrategyOptions.html",
    "title": "Class StrategyOptions",
    "keywords": "Class StrategyOptions This class represents configuration options for a strategy. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase StrategyOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Strategies.Options Assembly : CG.Business.dll Syntax public class StrategyOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Business.Strategies.StrategyBase.html": {
    "href": "api/CG.Business.Strategies.StrategyBase.html",
    "title": "Class StrategyBase",
    "keywords": "Class StrategyBase This class represents a base implementation of the IStrategy inteface. Inheritance System.Object CG.DisposableBase StrategyBase StrategyBase<TOptions> Implements IStrategy System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Strategies Assembly : CG.Business.dll Syntax public abstract class StrategyBase : DisposableBase, IStrategy, IDisposable Implements IStrategy System.IDisposable"
  },
  "api/CG.Business.Strategies.StrategyBase-1.html": {
    "href": "api/CG.Business.Strategies.StrategyBase-1.html",
    "title": "Class StrategyBase<TOptions>",
    "keywords": "Class StrategyBase<TOptions> This class represents a base implementation of the IStrategy interface. Inheritance System.Object CG.DisposableBase StrategyBase StrategyBase<TOptions> Implements IStrategy System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Strategies Assembly : CG.Business.dll Syntax public abstract class StrategyBase<TOptions> : StrategyBase, IStrategy, IDisposable where TOptions : StrategyOptions, new() Type Parameters Name Description TOptions The type of associated options. Constructors StrategyBase(IOptions<TOptions>) This constructor creates a new instance of the StrategyBase<TOptions> class. Declaration public StrategyBase(IOptions<TOptions> options) Parameters Type Name Description Microsoft.Extensions.Options.IOptions <TOptions> options The options to use with the strategy. Properties Options This property contains options for the strategy. Declaration protected IOptions<TOptions> Options { get; } Property Value Type Description Microsoft.Extensions.Options.IOptions <TOptions> Implements IStrategy System.IDisposable"
  },
  "api/CG.Business.Strategys.html": {
    "href": "api/CG.Business.Strategys.html",
    "title": "Namespace CG.Business.Strategys",
    "keywords": "Namespace CG.Business.Strategys Classes StrategyException This class represents a strategy related exception."
  },
  "api/CG.Business.Strategys.StrategyException.html": {
    "href": "api/CG.Business.Strategys.StrategyException.html",
    "title": "Class StrategyException",
    "keywords": "Class StrategyException This class represents a strategy related exception. Inheritance System.Object System.Exception BusinessException StrategyException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Business.Strategys Assembly : CG.Business.dll Syntax [Serializable] public class StrategyException : BusinessException, ISerializable Constructors StrategyException() This constructor creates a new instance of the StrategyException class. Declaration public StrategyException() StrategyException(SerializationInfo, StreamingContext) This constructor creates a new instance of the StrategyException class. Declaration public StrategyException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The serialization info to use for the exception. System.Runtime.Serialization.StreamingContext context The streaming context to use for the exception. StrategyException(String) This constructor creates a new instance of the StrategyException class. Declaration public StrategyException(string message) Parameters Type Name Description System.String message The message to use for the exception. StrategyException(String, Exception) This constructor creates a new instance of the StrategyException class. Declaration public StrategyException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. System.Exception innerException An optional inner exception reference. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions",
    "keywords": "Class ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type. Inheritance System.Object ApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Business.dll Syntax public static class ApplicationBuilderExtensions Methods UseRepositories(IApplicationBuilder, IWebHostEnvironment, String, String, String) This method reads the configuration for a LoaderOptions compatible section. It then uses that information to dynamically locate, and then invoke, an extension method that wires up any startup logic required to run the configured repository type(s). Declaration public static IApplicationBuilder UseRepositories(this IApplicationBuilder applicationBuilder, IWebHostEnvironment hostEnvironment, string configurationSection, string assemblyWhiteList = \"\", string assemblyBlackList = \"Microsoft*, System*, mscorlib, netstandard\") Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the operation. Microsoft.AspNetCore.Hosting.IWebHostEnvironment hostEnvironment The host environment to use for the operation. System.String configurationSection The root configuration section to use for the operation. System.String assemblyWhiteList An optional white list for filtering the list of assemblies that are searched during this operation. System.String assemblyBlackList An optional black list for filtering the list of assemblies that are searched during this operation. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder The value of the applicationBuilder parameter, for chaining calls together. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more arguments are invalid, or missing. UseStrategies(IApplicationBuilder, IWebHostEnvironment, String, String, String) This method reads the configuration for a LoaderOptions compatible section. It then uses that information to dynamically locate, and then invoke, an extension method that wires up any startup logic required to run the configured strategy type(s). Declaration public static IApplicationBuilder UseStrategies(this IApplicationBuilder applicationBuilder, IWebHostEnvironment hostEnvironment, string configurationSection, string assemblyWhiteList = \"\", string assemblyBlackList = \"Microsoft*, System*, mscorlib, netstandard\") Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the operation. Microsoft.AspNetCore.Hosting.IWebHostEnvironment hostEnvironment The host environment to use for the operation. System.String configurationSection The root configuration section to use for the operation. System.String assemblyWhiteList An optional white list for filtering the list of assemblies that are searched during this operation. System.String assemblyBlackList An optional black list for filtering the list of assemblies that are searched during this operation. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder The value of the applicationBuilder parameter, for chaining calls together. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more arguments are invalid, or missing."
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type."
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type."
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Business.dll Syntax public static class ServiceCollectionExtensions Methods AddRepositories(IServiceCollection, IConfiguration, String, String) This method reads the configuration for a LoaderOptions compatible section. It then uses that information to dynamically locate, and then invoke, an extension method that registers concrete options and repository types. Declaration public static IServiceCollection AddRepositories(this IServiceCollection serviceCollection, IConfiguration configuration, string assemblyWhiteList = \"\", string assemblyBlackList = \"Microsoft*, System*, mscorlib, netstandard\") Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. System.String assemblyWhiteList An optional white list for filtering the list of assemblies that are searched during this operation. System.String assemblyBlackList An optional black list for filtering the list of assemblies that are searched during this operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection the value of the serviceCollection parameter, for chaining calls together. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one ore more of the parameters is missing, or invalid. BusinessException This exception is thrown whenver the operation can't be completed. AddStrategies(IServiceCollection, IConfiguration, String, String) This method reads the configuration for a LoaderOptions compatible section. It then uses that information to dynamically locate, and then invoke, an extension method that registers concrete options and strategy types. Declaration public static IServiceCollection AddStrategies(this IServiceCollection serviceCollection, IConfiguration configuration, string assemblyWhiteList = \"\", string assemblyBlackList = \"Microsoft*, System*, mscorlib, netstandard\") Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. System.String assemblyWhiteList An optional white list for filtering the list of assemblies that are searched during this operation. System.String assemblyBlackList An optional black list for filtering the list of assemblies that are searched during this operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection the value of the serviceCollection parameter, for chaining calls together. Remarks The idea, with this method, is to allow the caller to specify the concrete strategy type(s) in the configuration. If configured to do so, this method will load an assembly in order to resolve the extension method(s) needed to register the strategy types. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one ore more of the parameters is missing, or invalid. BusinessException This exception is thrown whenver the operation can't be completed."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Business.dll contains business abstractions used by other CodeGator packages."
  }
}