{
  "api/CG.Business.Models.html": {
    "href": "api/CG.Business.Models.html",
    "title": "Namespace CG.Business.Models",
    "keywords": "Namespace CG.Business.Models Classes ModelBase This class represents a base implmentation of a business model. ModelBase<T> This class represents a base implmentation of a business model."
  },
  "api/CG.Business.Models.ModelBase.html": {
    "href": "api/CG.Business.Models.ModelBase.html",
    "title": "Class ModelBase",
    "keywords": "Class ModelBase This class represents a base implmentation of a business model. Inheritance System.Object CG.DataAnnotations.ValidatableObject ModelBase ModelBase<T> Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Models Assembly : CG.Business.dll Syntax public class ModelBase : ValidatableObject, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Business.Models.ModelBase-1.html": {
    "href": "api/CG.Business.Models.ModelBase-1.html",
    "title": "Class ModelBase<T>",
    "keywords": "Class ModelBase<T> This class represents a base implmentation of a business model. Inheritance System.Object CG.DataAnnotations.ValidatableObject ModelBase ModelBase<T> Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Business.Models Assembly : CG.Business.dll Syntax public class ModelBase<T> : ModelBase, IValidatableObject Type Parameters Name Description T The type of associated unique identifier. Properties Id This property contains the unique identifier for the model. Declaration [Key] public T Id { get; set; } Property Value Type Description T Methods Equals(Object) This method is overriden in order to determine equality. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The model to compare with. Returns Type Description System.Boolean True if the objects are equal; false otherwise. Overrides System.Object.Equals(System.Object) GetHashCode() This method is overridden in order to generate a hash code for the model. Declaration public override int GetHashCode() Returns Type Description System.Int32 An integer hash code that represents the model. Overrides System.Object.GetHashCode() ToString() This method returns a string that represents the current model. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Overrides System.Object.ToString() Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Business.Repositories.html": {
    "href": "api/CG.Business.Repositories.html",
    "title": "Namespace CG.Business.Repositories",
    "keywords": "Namespace CG.Business.Repositories Classes RepositoryBase This class represents a base implementation of the IRepository inteface. RepositoryBase<TOptions> This class represents a base implementation of the IRepository inteface. RepositoryBase<TEntity, TModel> This class represents a base implementation of the IRepository inteface. RepositoryBase<TOptions, TEntity, TModel> This class represents a base implementation of the IRepository inteface. RepositoryException This class represents a repository related exception. Interfaces IRepository This interface represents an object that manages low-level data operations - typically to and from a database."
  },
  "api/CG.Business.Repositories.IRepository.html": {
    "href": "api/CG.Business.Repositories.IRepository.html",
    "title": "Interface IRepository",
    "keywords": "Interface IRepository This interface represents an object that manages low-level data operations - typically to and from a database. Inherited Members System.IDisposable.Dispose() Namespace : CG.Business.Repositories Assembly : CG.Business.dll Syntax public interface IRepository : IDisposable"
  },
  "api/CG.Business.Repositories.Options.html": {
    "href": "api/CG.Business.Repositories.Options.html",
    "title": "Namespace CG.Business.Repositories.Options",
    "keywords": "Namespace CG.Business.Repositories.Options Classes RepositoryOptions This class represents options for a data repository."
  },
  "api/CG.Business.Repositories.Options.RepositoryOptions.html": {
    "href": "api/CG.Business.Repositories.Options.RepositoryOptions.html",
    "title": "Class RepositoryOptions",
    "keywords": "Class RepositoryOptions This class represents options for a data repository. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.DataAnnotations.Options.OptionsBase RepositoryOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Repositories.Options Assembly : CG.Business.dll Syntax public class RepositoryOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Business.Repositories.RepositoryBase.html": {
    "href": "api/CG.Business.Repositories.RepositoryBase.html",
    "title": "Class RepositoryBase",
    "keywords": "Class RepositoryBase This class represents a base implementation of the IRepository inteface. Inheritance System.Object CG.DisposableBase RepositoryBase RepositoryBase<TOptions> RepositoryBase<TEntity, TModel> Implements IRepository System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Repositories Assembly : CG.Business.dll Syntax public abstract class RepositoryBase : DisposableBase, IRepository, IDisposable Implements IRepository System.IDisposable"
  },
  "api/CG.Business.Repositories.RepositoryBase-1.html": {
    "href": "api/CG.Business.Repositories.RepositoryBase-1.html",
    "title": "Class RepositoryBase<TOptions>",
    "keywords": "Class RepositoryBase<TOptions> This class represents a base implementation of the IRepository inteface. Inheritance System.Object CG.DisposableBase RepositoryBase RepositoryBase<TOptions> Implements IRepository System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Repositories Assembly : CG.Business.dll Syntax public abstract class RepositoryBase<TOptions> : RepositoryBase, IRepository, IDisposable where TOptions : RepositoryOptions Type Parameters Name Description TOptions The type of associated options. Constructors RepositoryBase(TOptions) This constructor creates a new instance of the RepositoryBase<TOptions> class. Declaration public RepositoryBase(TOptions options) Parameters Type Name Description TOptions options The options to use with the repository. Properties Options This property contains options for the repository. Declaration protected TOptions Options { get; } Property Value Type Description TOptions Implements IRepository System.IDisposable"
  },
  "api/CG.Business.Repositories.RepositoryBase-2.html": {
    "href": "api/CG.Business.Repositories.RepositoryBase-2.html",
    "title": "Class RepositoryBase<TEntity, TModel>",
    "keywords": "Class RepositoryBase<TEntity, TModel> This class represents a base implementation of the IRepository inteface. Inheritance System.Object CG.DisposableBase RepositoryBase RepositoryBase<TEntity, TModel> RepositoryBase<TOptions, TEntity, TModel> Implements IRepository System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Repositories Assembly : CG.Business.dll Syntax public abstract class RepositoryBase<TEntity, TModel> : RepositoryBase, IRepository, IDisposable where TEntity : class where TModel : ModelBase Type Parameters Name Description TEntity The entity type associated with the repository. TModel The model type associated with the repository. Methods ToEntity(TModel) This method is called to convert a model to an entity. Declaration protected abstract TEntity ToEntity(TModel source) Parameters Type Name Description TModel source The object to be converted. Returns Type Description TEntity A converted entity. ToModel(TEntity) This method is called to convert an entity to a model. Declaration protected abstract TModel ToModel(TEntity source) Parameters Type Name Description TEntity source The object to be converted. Returns Type Description TModel A converted model. Implements IRepository System.IDisposable"
  },
  "api/CG.Business.Repositories.RepositoryBase-3.html": {
    "href": "api/CG.Business.Repositories.RepositoryBase-3.html",
    "title": "Class RepositoryBase<TOptions, TEntity, TModel>",
    "keywords": "Class RepositoryBase<TOptions, TEntity, TModel> This class represents a base implementation of the IRepository inteface. Inheritance System.Object CG.DisposableBase RepositoryBase RepositoryBase <TEntity, TModel> RepositoryBase<TOptions, TEntity, TModel> Implements IRepository System.IDisposable Inherited Members RepositoryBase<TEntity, TModel>.ToEntity(TModel) RepositoryBase<TEntity, TModel>.ToModel(TEntity) CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Repositories Assembly : CG.Business.dll Syntax public abstract class RepositoryBase<TOptions, TEntity, TModel> : RepositoryBase<TEntity, TModel>, IRepository, IDisposable where TOptions : RepositoryOptions where TEntity : class where TModel : ModelBase Type Parameters Name Description TOptions The type of associated options. TEntity The entity type associated with the repository. TModel The model type associated with the repository. Constructors RepositoryBase(TOptions) This constructor creates a new instance of the RepositoryBase<TOptions> class. Declaration public RepositoryBase(TOptions options) Parameters Type Name Description TOptions options The options to use with the repository. Properties Options This property contains options for the manager. Declaration protected TOptions Options { get; } Property Value Type Description TOptions Implements IRepository System.IDisposable"
  },
  "api/CG.Business.Repositories.RepositoryException.html": {
    "href": "api/CG.Business.Repositories.RepositoryException.html",
    "title": "Class RepositoryException",
    "keywords": "Class RepositoryException This class represents a repository related exception. Inheritance System.Object System.Exception CG.CGException RepositoryException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Business.Repositories Assembly : CG.Business.dll Syntax [Serializable] public class RepositoryException : CGException, ISerializable Constructors RepositoryException() This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException() RepositoryException(SerializationInfo, StreamingContext) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The serialization info to use for the exception. System.Runtime.Serialization.StreamingContext context The streaming context to use for the exception. RepositoryException(String) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(string message) Parameters Type Name Description System.String message The message to use for the exception. RepositoryException(String, Exception) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. System.Exception innerException An optional inner exception reference. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/CG.Business.Stores.html": {
    "href": "api/CG.Business.Stores.html",
    "title": "Namespace CG.Business.Stores",
    "keywords": "Namespace CG.Business.Stores Classes StoreBase This class represents a base implementation of the IStore interface. StoreBase<TOptions> This class represents a base implementation of the IStore interface. StoreException This class represents a store related exception. Interfaces IStore This interface represents an object that performs business operations on a specific type of data."
  },
  "api/CG.Business.Stores.IStore.html": {
    "href": "api/CG.Business.Stores.IStore.html",
    "title": "Interface IStore",
    "keywords": "Interface IStore This interface represents an object that performs business operations on a specific type of data. Inherited Members System.IDisposable.Dispose() Namespace : CG.Business.Stores Assembly : CG.Business.dll Syntax public interface IStore : IDisposable"
  },
  "api/CG.Business.Stores.Options.html": {
    "href": "api/CG.Business.Stores.Options.html",
    "title": "Namespace CG.Business.Stores.Options",
    "keywords": "Namespace CG.Business.Stores.Options Classes StoreOptions This class represents options for a store."
  },
  "api/CG.Business.Stores.Options.StoreOptions.html": {
    "href": "api/CG.Business.Stores.Options.StoreOptions.html",
    "title": "Class StoreOptions",
    "keywords": "Class StoreOptions This class represents options for a store. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.DataAnnotations.Options.OptionsBase StoreOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Stores.Options Assembly : CG.Business.dll Syntax public class StoreOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Business.Stores.StoreBase.html": {
    "href": "api/CG.Business.Stores.StoreBase.html",
    "title": "Class StoreBase",
    "keywords": "Class StoreBase This class represents a base implementation of the IStore interface. Inheritance System.Object CG.DisposableBase StoreBase StoreBase<TOptions> Implements IStore System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Stores Assembly : CG.Business.dll Syntax public abstract class StoreBase : DisposableBase, IStore, IDisposable Implements IStore System.IDisposable"
  },
  "api/CG.Business.Stores.StoreBase-1.html": {
    "href": "api/CG.Business.Stores.StoreBase-1.html",
    "title": "Class StoreBase<TOptions>",
    "keywords": "Class StoreBase<TOptions> This class represents a base implementation of the IStore interface. Inheritance System.Object CG.DisposableBase StoreBase StoreBase<TOptions> Implements IStore System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Business.Stores Assembly : CG.Business.dll Syntax public abstract class StoreBase<TOptions> : StoreBase, IStore, IDisposable where TOptions : StoreOptions Type Parameters Name Description TOptions The type of associated options. Constructors StoreBase(TOptions) This constructor creates a new instance of the StoreBase<TOptions> class. Declaration public StoreBase(TOptions options) Parameters Type Name Description TOptions options The options to use with the store. Properties Options This property contains options for the manager. Declaration protected TOptions Options { get; } Property Value Type Description TOptions Implements IStore System.IDisposable"
  },
  "api/CG.Business.Stores.StoreException.html": {
    "href": "api/CG.Business.Stores.StoreException.html",
    "title": "Class StoreException",
    "keywords": "Class StoreException This class represents a store related exception. Inheritance System.Object System.Exception CG.CGException StoreException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Business.Stores Assembly : CG.Business.dll Syntax [Serializable] public class StoreException : CGException, ISerializable Constructors StoreException() This constructor creates a new instance of the StoreException class. Declaration public StoreException() StoreException(SerializationInfo, StreamingContext) This constructor creates a new instance of the StoreException class. Declaration public StoreException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The serialization info to use for the exception. System.Runtime.Serialization.StreamingContext context The streaming context to use for the exception. StoreException(String) This constructor creates a new instance of the StoreException class. Declaration public StoreException(string message) Parameters Type Name Description System.String message The message to use for the exception. StoreException(String, Exception) This constructor creates a new instance of the StoreException class. Declaration public StoreException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. System.Exception innerException An optional inner exception reference. Implements System.Runtime.Serialization.ISerializable"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Business.dll contains business abstractions used by other CodeGator packages."
  }
}